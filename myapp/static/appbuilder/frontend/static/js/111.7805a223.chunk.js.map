{"version":3,"file":"static/js/111.7805a223.chunk.js","mappings":"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","sources":["components/EchartCore/EchartCore.tsx","components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","components/FileUploadPlus/FileUploadPlus.tsx","components/DynamicForm/DynamicForm.tsx","pages/ADUGTemplate.tsx","pages/ChartOptionTempalte.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport * as echarts from 'echarts';\n// import * as echarts from 'echarts/core';\n// import {\n//     BarChart,\n//     // 系列类型的定义后缀都为 SeriesOption\n//     BarSeriesOption,\n//     PieChart,\n//     PieSeriesOption,\n//     LineChart,\n//     LineSeriesOption,\n//     HeatmapChart,\n//     HeatmapSeriesOption\n// } from 'echarts/charts';\n// import {\n//     TitleComponent,\n//     // 组件类型的定义后缀都为 ComponentOption\n//     TitleComponentOption,\n//     TooltipComponent,\n//     TooltipComponentOption,\n//     GridComponent,\n//     GridComponentOption,\n//     // 数据集组件\n//     DatasetComponent,\n//     DatasetComponentOption,\n//     LegendComponent,\n//     // 内置数据转换器组件 (filter, sort)\n//     TransformComponent,\n//     CalendarComponentOption,\n//     CalendarComponent,\n//     VisualMapComponent,\n//     VisualMapComponentOption,\n//     ToolboxComponent\n// } from 'echarts/components';\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport './EchartCore.less';\nimport { Spin } from 'antd';\nimport { FieldNumberOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\n\nexport type ECOption = echarts.EChartsOption\n// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型\n// export type ECOption = echarts.ComposeOption<\n//     | BarSeriesOption\n//     | LineSeriesOption\n//     | TitleComponentOption\n//     | TooltipComponentOption\n//     | GridComponentOption\n//     | DatasetComponentOption\n//     | CalendarComponentOption\n//     | HeatmapSeriesOption\n//     | VisualMapComponentOption\n//     | PieSeriesOption\n// >;\n\n// // 注册必须的组件\n// echarts.use([\n//     LegendComponent,\n//     TitleComponent,\n//     TooltipComponent,\n//     GridComponent,\n//     DatasetComponent,\n//     TransformComponent,\n//     CalendarComponent,\n//     VisualMapComponent,\n//     ToolboxComponent,\n//     BarChart,\n//     LineChart,\n//     PieChart,\n//     LabelLayout,\n//     HeatmapChart,\n//     UniversalTransition,\n//     CanvasRenderer\n// ]);\n\ninterface IProps {\n    // option: ECOption\n    option: echarts.EChartsOption\n    loading?: boolean\n    title?: string\n    style?: React.CSSProperties\n    unit?: string\n    data?: {\n        xData: any[]\n        yData: any[]\n    }\n    isNoData?: boolean\n}\n\nconst defaultChartStyle: React.CSSProperties = {\n    height: 300\n}\n\n// https://echarts.apache.org/handbook/zh/how-to/data/dynamic-data\nexport default function EchartCore(props: IProps) {\n    const [chartInstance, setChartInstance] = useState<echarts.ECharts>()\n    const id = Math.random().toString(36).substring(2);\n    const { t, i18n } = useTranslation();\n\n    const option = {}\n\n    useEffect(() => {\n        const chartDom = document.getElementById(id)\n        if (chartDom) {\n            const chart = echarts.init(chartDom);\n            chart.setOption({ ...option, ...props.option })\n\n            if (!chartInstance) {\n                setChartInstance(chart)\n            }\n        }\n    }, [props.option, props.data])\n\n    return (\n        <Spin spinning={props.loading}>\n            <div className=\"chart-container\">\n                <div id={id} style={{ ...defaultChartStyle, ...props.style }}></div>\n                {\n                    props.isNoData ? <div className=\"chart-nodata\">\n                        <div>{t('暂无数据')}</div>\n                    </div> : null\n                }\n            </div>\n        </Spin>\n    )\n}\n","import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\n// import ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\nimport { useTranslation } from 'react-i18next';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst customizeRenderEmpty = () => (\n\t\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t\t<div>{t('暂无数据')}</div>\n\t\t</Row>\n\t);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== t('操作'));\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\t// const handleClickOutputExcel = () => {\n\t// \tconst option: any = {};\n\t// \toption.fileName = 'result';\n\t// \toption.datas = [\n\t// \t\t{\n\t// \t\t\tsheetData: dataFormat.data,\n\t// \t\t\tsheetName: 'sheet',\n\t// \t\t\tsheetHeader: dataFormat.header,\n\t// \t\t},\n\t// \t];\n\t// \tconst toExcel = new ExportJsonExcel(option);\n\t// \ttoExcel.saveExcel();\n\t// };\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={t('导出数据')}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">{t('选择需要导出的列')}：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('全选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('反选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t{/* <Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane> */}\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t{t('导出数据')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any, form: FormInstance<any>) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst { t, i18n } = useTranslation();\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText={t('确定')}\n\t\t\tcancelText={t('取消')}\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values, form);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\nimport { useTranslation } from 'react-i18next';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请选择key') }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('请选择')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请填写value') }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t{t('查询')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>{t('展开')}</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>{t('收起')}</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import { AudioOutlined, CloseOutlined, DeleteColumnOutlined, DeleteFilled, DeleteOutlined, InboxOutlined, LoadingOutlined, PlusOutlined, VideoCameraAddOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport React, { useEffect, useState } from 'react'\nimport './FileUploadPlus.less';\n\ninterface Iprops {\n    filetype?: TFileType\n    onChange?: (value: any) => void\n    value?: string[]\n    maxCount?: number\n    maxSize?: number\n    format?: string[]\n}\n\ntype TFileType = 'file' | 'video' | 'audio'\n\nexport default function FileUploadPlus(props: Iprops) {\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\n    const [fileLoading, setFileLoading] = useState(false);\n    const [imgUrl, setImgUrl] = useState('');\n    const [imageList, setImageList] = useState<string[]>([])\n    const [loading, setLoading] = useState(true);\n    const [fileList, setFileList] = useState<UploadFile[]>([])\n\n    // useEffect(() => {\n    //     setFileList(props.value || [])\n    // }, [props.value])\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n    // console.log('props', props);\n    function beforeUpload(file: RcFile) {\n        // console.log('file', file);\n\n        const maxCount = props.maxCount || 1\n        if (fileList.length >= maxCount) {\n            message.error('超出文件数量限制');\n            return false\n        }\n        // 'image/jpeg' || 'video/mp4' || 'audio/mpeg'\n        const isFormatOk = props.format?.includes(file.type);\n        if (!isFormatOk) {\n            message.error('文件格式错误');\n        }\n        const isLt2M = file.size < (props.maxSize || 2 * 1024 * 1024);\n        if (!isLt2M) {\n            message.error('文件大小限制');\n        }\n        return isFormatOk && isLt2M;\n    }\n\n    const handleChange = (info: UploadChangeParam) => {\n        console.log(info);\n\n        if (info.file.status === 'uploading') {\n            setFileLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFileLoading(false);\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n        }\n        if (info.file.status === \"removed\") {\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n            return;\n        }\n    };\n\n    const file2Bin = (file?: RcFile) => {\n        console.log('file2Bin', file);\n        return new Promise((resolve, reject) => {\n            if (file) {\n                let name = file.name.replace(/.+\\./, '');\n                let filename = file.name;\n                let reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = () => {\n                    resolve(reader.result)\n                }\n            } else {\n                reject(undefined)\n            }\n        })\n    }\n\n    //建立一个可存取到该file的url\n    function getObjectURL(file: any) {\n        var url = null;\n        if ((window as any).createObjectURL != undefined) { // basic\n            url = (window as any).createObjectURL(file);\n        } else if (window.URL != undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file);\n        } else if (window.webkitURL != undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file);\n        }\n        return url;\n    }\n\n    const createMediaPreview = (file: UploadFile<any>, fileIndex: number, filetype: TFileType) => {\n        const url = getObjectURL(file)\n        const key = Math.random().toString(36).substring(2);\n        if (filetype === 'video') {\n            return <div className=\"p-r\" key={key}>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                        props.onChange && props.onChange(currentFileList)\n                    }}\n                    className=\"d-il p-a plr8 ptb2 bg-fail\"\n                    style={{ top: 0, right: 0, borderBottomLeftRadius: 6, zIndex: 9 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n                <video className=\"w100 mb8\" src={url} controls></video>\n            </div>\n        } else if (filetype === 'audio') {\n            return <div className=\"d-f ac mb8\" key={key}>\n                <audio className=\"w100 flex1\" src={url} controls></audio>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                        props.onChange && props.onChange(currentFileList)\n                    }}\n                    className=\"d-il plr8 ptb2 bg-fail\"\n                    style={{ borderRadius: 6 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n            </div>\n        }\n        return file\n    }\n\n    return (\n        <>\n            <div>\n                {\n                    fileList.map((file, fileIndex) => {\n                        return createMediaPreview(file, fileIndex, props.filetype || 'file')\n                    })\n                }\n            </div>\n            <Upload.Dragger\n                // name=\"file\"\n                fileList={fileList}\n                showUploadList={false}\n                customRequest={(options) => {\n                    console.log(\"options.file\",options.file);\n                    const tarList = [...fileList, options.file as RcFile]\n                    console.log(\"tarList\",tarList);\n                    setFileList(tarList)\n\n                    Promise.all(tarList.map((item: any) => file2Bin(item))).then(res => {\n                        console.log(res)\n                        props.onChange && props.onChange(res)\n                    })\n\n                    // getBase64(options.file, (imageUrl: string) => {\n                    //     // setImgUrl(imageUrl);\n                    //     const tarList = [...imageList, imageUrl]\n                    //     setImageList(tarList)\n                    //     setFileLoading(false);\n                    //     props.onChange && props.onChange(tarList)\n                    // });\n                }}\n                beforeUpload={beforeUpload}\n                onChange={handleChange}\n            >\n                <p className=\"ant-upload-drag-icon\">\n                    {\n                        (props.filetype === 'file' || !props.filetype) ? <InboxOutlined /> : null\n                    }\n                    {\n                        props.filetype === 'video' ? <VideoCameraAddOutlined /> : null\n                    }\n                    {\n                        props.filetype === 'audio' ? <AudioOutlined /> : null\n                    }\n                </p>\n                <p className=\"ant-upload-text\">点击或拖拽文件上传</p>\n            </Upload.Dragger>\n        </>\n    )\n}\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Space, Steps, Tooltip } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { MinusCircleOutlined, PlusOutlined, QuestionCircleOutlined, SyncOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\nimport 'moment/locale/zh-cn';\nimport locale from 'antd/es/date-picker/locale/zh_CN';\nimport { useTranslation } from 'react-i18next';\nimport FileUploadPlus from '../FileUploadPlus/FileUploadPlus';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value?: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select' | 'fileUpload'\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n    const { t, i18n } = useTranslation();\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderFileUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus\n                filetype={config.data.type}\n                format={config.data.format}\n                maxCount={config.data.maxCount || 1}\n            />\n        </Form.Item>\n    }\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n\n        let extraContent: any = null\n\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={<>\n                            {config.data.tips ? <Tooltip\n                                className=\"mr8\"\n                                placement=\"bottom\"\n                                title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                            >\n                                <div className=\"cp d-il\">\n                                    <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                                    <span className=\"pl4 c-theme\">{t('详情')}</span>\n                                </div>\n                            </Tooltip> : null}\n                            {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        </>}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <InputSearch\n                onClick={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                isOpenSearchMatch={true}\n                disabled={config.disable}\n                placeholder={`${t('请选择')}${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\n        </Form.Item>\n    }\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span className=\"pr4\" dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                {\n                    config.data.isRefresh ? <div className=\"cp d-il\" onClick={() => {\n                        props.onRetryInfoChange && props.onRetryInfoChange()\n                    }}>\n                        <SyncOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('刷新列表')}</span>\n                    </div> : null\n                }\n            </>}\n            {...itemProps}\n        >\n            <Select\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={config.placeHolder || `${t('请选择')}${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: t('请选择时间') }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: t('请选择时间范围') }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            case 'fileUpload':\n                return renderFileUpload(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                // <Space key={key} style={{ display: 'flex', marginBottom: 8 }}\n                                //     align='baseline'\n                                // >\n                                //     {\n                                //         item.list && item.list.map(listItem => {\n                                //             return dispatchRenderFormItem(listItem, {\n                                //                 ...restField,\n                                //                 name: [name, listItem.name],\n                                //                 // style: { flexDirection: 'column' }\n                                //             })\n                                //         })\n                                //     }\n                                //     {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                //     <Form.Item wrapperCol={{ offset: 5 }}>\n                                //         <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                //             删除该项\n                                //         </Button>\n                                //     </Form.Item>\n                                // </Space>\n                                <div key={key} className=\"bor b-side pt8 plr16 mb8 d-f\" style={{ alignItems: 'start', minWidth: 1600 }}>\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name],\n                                                labelAlign: 'left',\n                                                labelCol: 24,\n                                                style: { flexDirection: 'column', flex: 1, marginBottom: 8 },\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item >\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />} style={{ width: 120 }}>\n                                            {t('删除该项')}\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\" label=\"\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    {t('增加一项')}\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return <div style={{ width: 680 }}>\n                    {dispatchRenderFormItem(item)}\n                </div>\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                {t('上一步')}\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                {t('下一步')}\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">{t('点击确定完成提交')}</div>\n                            )}\n                        </div>\n                    </div>\n                </> : <div style={{ width: 680 }}>\n                    {\n                        renderFormItem(currentConfig || [])\n                    }\n                </div>\n            }\n        </>\n    )\n}\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification, Pagination, Switch } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, actionADUGTemplateRetryInfo, actionADUGTemplateFavorite, actionADUGTemplateCancelFavorite, actionADUGTemplateChartOption } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig } from '../components/DynamicForm/DynamicForm';\nimport ChartOptionTempalte from './ChartOptionTempalte';\nimport { useTranslation } from 'react-i18next';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n    only_favorite?: boolean\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 20;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState((getParam('isVisableAdd') === 'true') || false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [20, 50, 100, 500],\n        showTotal: (total) => `${t('共')}${total}${t('条')}`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n\n    let customFormData: Record<string, string> = {}\n    try {\n        customFormData = JSON.parse(getParam('formData') || \"{}\")\n    } catch (err) { }\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState(customFormData)\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n    const [list_ui_type, setList_ui_type] = useState<'card' | 'table'>()\n    const [list_ui_args, setList_ui_args] = useState<{\n        card_width: string\n        card_height: string\n    }>()\n    const [opsLink, setOpsLink] = useState<Array<{\n        text: string\n        url: string\n    }>>([])\n    const [listColumns, setListColumns] = useState<string[]>([])\n    const [isAllDataList, _setIsAllDataList] = useState(true)\n    const isAllDataListRef = useRef(isAllDataList);\n    const setIsAllDataList = (data: boolean): void => {\n        isAllDataListRef.current = data;\n        _setIsAllDataList(data);\n    };\n    const [isShowCollect, _setIsShowCollect] = useState(false)\n    const isShowCollectRef = useRef(isShowCollect);\n    const setIsShowCollect = (data: boolean): void => {\n        isShowCollectRef.current = data;\n        _setIsShowCollect(data);\n    };\n    const [isEchartShow, setIsEchartShow] = useState(false)\n    const [pageSize, setPageSize] = useState(PAGE_SIZE)\n    const [listTitle, setListTitle] = useState<string>()\n\n    const { t, i18n } = useTranslation();\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n\n    }, [pageSize])\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (props && props.disable) {\n            navigate('/404')\n        }\n    }, [])\n\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        return data.map((item, index) => {\n            let type = item['ui-type'] || 'input'\n            if (type === 'select2') {\n                type = 'select'\n            }\n            if (type === 'file') {\n                type = 'fileUpload'\n            }\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                if (type === 'select') {\n                    return item.type === 'DataRequired' ? { required: true, message: `${t('请选择')} ${label}` } : undefined\n                }\n\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `${t('请输入')} ${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `${t('请按正确的规则输入')}` }\n                    case 'Length':\n                        return { min: item.min || 0, max: item.max, message: `${t('请输入正确的长度')}` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.description || description_columns[item.name] || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n        setLoadingAdd(true)\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data,\n                download_data,\n                list_ui_type,\n                list_ui_args,\n                ops_link,\n                enable_favorite,\n                echart,\n                page_size,\n                list_title\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            const tableAction: any = {\n                title: t('操作'),\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        isShowCollectRef.current && isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('收藏'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定收藏')}?`,\n                                                okText: t('确认收藏'),\n                                                cancelText: t('取消'),\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('收藏成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('收藏失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>{t('收藏')}</div></Menu.Item> : null\n                                    }\n                                    {\n                                        isShowCollectRef.current && !isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('取消收藏'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定取消收藏')}?`,\n                                                okText: t('确认取消收藏'),\n                                                cancelText: t('取消'),\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateCancelFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('操作成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('操作失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>{t('取消收藏')}</div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            {t('详情')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns, label_columns, description_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\n                                                    }\n                                                })\n\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn(t('用户没有修改权限'))\n                                            })\n                                        }}>\n                                            {t('修改')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('删除'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定删除')}?`,\n                                                okText: t('确认删除'),\n                                                cancelText: t('取消'),\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('删除成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('删除失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            {t('删除')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: t('确认'),\n                                                    cancelText: t('取消'),\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve(res);\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject(err);\n                                                                });\n                                                        })\n                                                            .then((res: any) => {\n                                                                message.success(t('操作成功'));\n\n                                                                if (res.data.result.link) {\n                                                                    window.open(res.data.result.link, 'bank')\n                                                                }\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error(t('操作失败'));\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {t(`${action.text}`)}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">{t('更多')}<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            if (customFormData && Object.keys(customFormData).length) {\n                const reTryInfoQuene = (Object.keys(customFormData) || []).filter(key => customFormData[key] && addColumnsMap[key] && addColumnsMap[key].retry_info)\n                let reTryInfoFlag = reTryInfoQuene.length\n\n                const handleReTryInfo = (tar: string) => {\n                    reTryInfoFlag = reTryInfoFlag - 1;\n\n                    actionADUGTemplateRetryInfo(`${route_base}_info`, { exist_add_args: tar }).then(res => {\n                        const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                        const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                        const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                        const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                            const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                            return {\n                                group: group.group,\n                                expanded: group.expanded,\n                                config: createDyFormConfig(currentData, label_columns, description_columns)\n                            }\n                        })\n                        const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                        setDynamicFormDataAdd(formReset)\n                        setDynamicFormConfigAdd(formConfigAdd)\n                        setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n                        if (reTryInfoFlag) {\n                            const resTar = JSON.stringify(formReset)\n                            handleReTryInfo(resTar)\n                        }\n                    }).catch(err => {\n                        message.error(t('字段切换错误'))\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }\n\n                if (reTryInfoQuene.length) {\n                    const formRes = customFormData\n                    for (const key in formRes) {\n                        if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                            const value = formRes[key];\n                            if (value === undefined) {\n                                delete formRes[key]\n                            }\n                        }\n                    }\n                    const tar = JSON.stringify(formRes)\n\n                    handleReTryInfo(tar)\n                }\n            }\n\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            edit_columns.forEach((item) => {\n                if (item['ui-type'] === 'list') {\n                    item.info.forEach((itemInfo: any) => {\n                        updateColumnsMap[itemInfo.name] = itemInfo\n                    })\n                }\n            })\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error(t('filter解析异常'))\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setListTitle(list_title)\n            setPageSize(page_size)\n            setIsEchartShow(echart)\n            setIsShowCollect(enable_favorite)\n            setOpsLink(ops_link)\n            setListColumns(list_columns)\n            setList_ui_type(list_ui_type)\n            setList_ui_args(list_ui_args)\n            setIsDownLoadData(download_data)\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n\n            fetchData({\n                pageConf: {\n                    ...pageInfoInit,\n                    pageSize: page_size\n                },\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n\n        }).catch(err => {\n            console.log(err);\n        }).finally(() => {\n            setLoading(false)\n            setLoadingAdd(false)\n        })\n    }, []);\n\n    const formatFilterParams = (params: any[], paramsMap: Record<string, any>) => {\n        let formatData = undefined\n        const temlateId = getParam('id')\n\n        formatData = {\n            filters: [\n                temlateId ? {\n                    col: props?.model_name,\n                    opr: \"rel_o_m\",\n                    value: +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    let opr = ''\n                    const oprList = ['rel_o_m', 'ct', 'eq']\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    for (let i = 0; i < oprList.length; i++) {\n                        const currentOpr = oprList[i];\n                        if (sourceOprList.includes(currentOpr)) {\n                            opr = currentOpr\n                            break\n                        }\n                    }\n\n                    return {\n                        col: param.key,\n                        opr: opr,\n                        value: param.value\n                    }\n                })\n            ].filter(item => !!item),\n        }\n        return formatData\n    }\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter,\n        only_favorite\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined,\n            only_favorite: false\n        }) => {\n        setLoading(true);\n\n        const form_data = JSON.stringify({\n            ...formatFilterParams(params, paramsMap),\n            only_favorite,\n            str_related: 1,\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: t('确认'),\n                cancelText: t('取消'),\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success(t('操作成功'));\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error(t('操作失败'));\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn(t('请先选择'))\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            const isXLS = file.name.indexOf('.xls') !== -1;\n            const isJson = file.name.indexOf('.json') !== -1;\n            const isXLSX = file.name.indexOf('.xlsx') !== -1;\n            if (isCSV || isJson || isXLS || isXLSX) {\n                return true\n            } else {\n                message.error(`文件格式支持CSV/JSON/XLS/XLSX`);\n            }\n        },\n        onChange(info) {\n            if (info.file.status === 'done') {\n                notification['success']({\n                    message: t('导入成功'),\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                notification['error']({\n                    message: t('导入失败'),\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in h100 d-f fd-c\">\n            {/* 添加 */}\n            <ModalForm\n                title={`${t('添加')} ${labelTitle}`}\n                // width={1000}\n                formData={dynamicFormDataAdd}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values, form) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`${t('添加')} ${labelTitle} ${t('成功')}`)\n                        form.resetFields()\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`${t('添加')} ${labelTitle} ${t('失败')}`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\n                        setLoadingAdd(true)\n\n                        const formRes = form.getFieldsValue()\n                        for (const key in formRes) {\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                                const value = formRes[key];\n                                if (value === undefined) {\n                                    delete formRes[key]\n                                }\n                            }\n                        }\n                        const tar = JSON.stringify(formRes)\n                        form.resetFields()\n\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                                return {\n                                    group: group.group,\n                                    expanded: group.expanded,\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                                }\n                            })\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                            form.setFieldsValue(formReset)\n                            setDynamicFormConfigAdd(formConfigAdd)\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n                        }).catch(err => {\n                            message.error(t('字段切换错误'))\n                        }).finally(() => {\n                            setLoadingAdd(false)\n                        })\n\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`${t('修改')} ${labelTitle}`}\n                // width={1500}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'datePicker') {\n                        let value = next.value;\n                        value = moment(value)\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'list') {\n                        const value = (next.value || []).map((item: any) => {\n                            for (const listItemKey in item) {\n                                if (Object.prototype.hasOwnProperty.call(item, listItemKey)) {\n                                    const listItemValue = item[listItemKey];\n                                    if ((updateColumnsMap[listItemKey] || {})['ui-type'] === 'datePicker') {\n                                        item[listItemKey] = moment(listItemValue)\n                                    }\n                                }\n                            }\n                            return item\n                        })\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`${t('更新')} ${labelTitle} ${t('成功')}`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`${t('更新')} ${labelTitle} ${t('失败')}`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle} ${t('详情')}`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><pre style={{ whiteSpace: 'break-spaces' }} dangerouslySetInnerHTML={{\n                                        __html: (() => {\n                                            let content = item.value\n                                            if (Object.prototype.toString.call(item.value) === '[object Object]' || Object.prototype.toString.call(item.value) === '[object Array]') {\n                                                try {\n                                                    content = JSON.stringify(item.value)\n                                                } catch (error) { }\n                                            }\n                                            return content\n                                        })()\n                                    }}></pre></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />{t('返回')}</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-icon-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>{t('帮助链接')}</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title h100 d-f fd-c\">\n                <div className=\"mlr16 mb16 flex1 bg-w\">\n                    {\n                        !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                            localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                            setFilterValues(values)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfoInit,\n                                params: values,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        }} />\n                    }\n\n                    {\n                        isEchartShow ? <ChartOptionTempalte url={baseUrl} /> : null\n                    }\n\n                    {\n                        list_ui_type !== 'card' ? <TableBox\n                            cancelExportData={true}\n                            tableKey={`tablebox_${location.pathname}`}\n                            titleNode={<Col className=\"tablebox-title\">\n                                <div className=\"d-f ac\">\n                                    <div className=\"mr8\">{listTitle || ''}</div>\n                                    {\n                                        isShowCollect ? <div className=\"pb2\">\n                                            <Switch checked={isAllDataList} checkedChildren={t('全部')} unCheckedChildren={t('我的收藏')} defaultChecked onChange={(checked) => {\n                                                setIsAllDataList(checked)\n                                                fetchData({\n                                                    ...fetchDataParams,\n                                                    pageConf: pageInfoInit,\n                                                    params: filterValues,\n                                                    sorter: sorterParam,\n                                                    paramsMap: filterParamsMap,\n                                                    only_favorite: !checked\n                                                });\n                                            }} />\n                                        </div> : null\n                                    }\n                                </div>\n                            </Col>}\n                            buttonNode={<div className=\"d-f ac\">\n                                {\n                                    opsLink && opsLink.length ? opsLink.map(config => {\n                                        return <Button type=\"primary\" className=\"mr16\" onClick={() => {\n                                            window.open(config.url, 'bank')\n                                        }}>{config.text}</Button>\n                                    }) : null\n                                }\n\n                                {\n                                    permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>{t('添加')}{labelTitle}<PlusOutlined /></Button> : null\n                                }\n                                <div>\n                                    <Dropdown overlay={<Menu>\n                                        {\n                                            multipleAction.map((action, index) => {\n                                                return <Menu.Item key={`table_muliple_${index}`}>\n                                                    <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                        {`${t('批量')} ${action.text}`}\n                                                    </span>\n                                                </Menu.Item>\n                                            })\n                                        }\n\n                                    </Menu>}>\n                                        <Button>{t('批量操作')} <DownOutlined /></Button>\n                                    </Dropdown>\n                                </div>\n                                {\n                                    isImportData ? <div className=\"d-f ml16\">\n                                        <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\"><div>{t('注意：csv逗号分隔')}，</div><div>{t('第一行为列的英文名')}</div> <div className=\"link\" onClick={() => {\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\n                                        }}>{(t('下载导入模板'))}</div></span>} placement=\"topLeft\">\n                                            <Upload {...uploadConfig}>\n                                                <Button className=\"\" icon={<UploadOutlined />}>{t('批量导入数据')}</Button>\n                                            </Upload>\n                                        </Tooltip>\n                                    </div> : null\n                                }\n                                {\n                                    isDownLoadData ? <Button className=\"ml16\" onClick={() => {\n                                        Modal.confirm({\n                                            title: t('导出数据'),\n                                            icon: <ExclamationCircleOutlined />,\n                                            content: '',\n                                            okText: t('确认导出数据'),\n                                            cancelText: t('取消'),\n                                            onOk() {\n                                                const formatData = formatFilterParams(filterValues, filterParamsMap)\n                                                const form_data = JSON.stringify(formatData)\n                                                window.open(`${window.location.origin}${baseUrlRef.current}download?form_data=${form_data}`)\n                                                message.success(t('导出成功'));\n                                            },\n                                            onCancel() { },\n                                        });\n                                    }}>{t('批量导出')}  <ExportOutlined /></Button> : null\n                                }\n\n                            </div>}\n                            rowKey={(record: any) => {\n                                return JSON.stringify(record)\n                            }}\n                            columns={currentColumns}\n                            loading={loading}\n                            pagination={pageInfo}\n                            dataSource={dataList}\n                            onChange={(pageInfo: any, filters, sorter: any) => {\n                                const tarSorter = sorter.order ? {\n                                    order_column: sorter.columnKey,\n                                    order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                                } as ISorterParam : undefined\n\n                                fetchData({\n                                    ...fetchDataParams,\n                                    pageConf: pageInfo,\n                                    params: filterValues,\n                                    paramsMap: filterParamsMap,\n                                    sorter: tarSorter\n                                });\n                            }}\n                            rowSelection={{\n                                type: 'checkbox',\n                                fixed: 'left',\n                                columnWidth: 32,\n                                selectedRowKeys,\n                                onChange: (selectedRowKeys) => {\n                                    setSelectedRowKeys(selectedRowKeys)\n                                }\n                            }}\n                            scroll={{ x: tableWidth, y: scrollY }}\n                        /> : <div className=\"bg-w p16\">\n                            <div className=\"d-f fw\">\n                                {\n                                    dataList.map((row, rowIndex) => {\n                                        return <div style={{ overflowY: 'auto', width: list_ui_args?.card_width, height: list_ui_args?.card_height }} key={`card${rowIndex}`} className=\"card-row mr16 mb16\" >\n                                            {\n                                                Object.keys(row).map((key, itemIndex) => {\n                                                    if (listColumns.includes(key)) {\n                                                        return <div style={{ wordBreak: 'break-all' }} key={`row${rowIndex}${itemIndex}`} dangerouslySetInnerHTML={{ __html: row[key] }}></div>\n                                                    }\n                                                    return null\n                                                })\n                                            }\n                                        </div>\n                                    })\n                                }\n                            </div>\n                            <div className=\"ta-r\">\n                                <Pagination {...pageInfo} onChange={(page, pageSize) => {\n                                    fetchData({\n                                        ...fetchDataParams,\n                                        pageConf: {\n                                            ...pageInfo,\n                                            current: page,\n                                            pageSize\n                                        },\n                                        params: filterValues,\n                                        paramsMap: filterParamsMap,\n                                    });\n                                }} />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { actionADUGTemplateChartOption } from '../api/kubeflowApi'\nimport EchartCore, { ECOption } from '../components/EchartCore/EchartCore'\n\ninterface IProps {\n    url?: string\n}\n\nexport default function ChartOptionTempalte(props: IProps) {\n    const [option, setOption] = useState<ECOption>({})\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if (props.url) {\n            actionADUGTemplateChartOption(`${props.url}echart`, {}).then(res => {\n                const option = res.data.result\n                var currentOps: any = {}\n                eval(`currentOps=${option}`)\n                setOption(currentOps)\n            }).catch(err => { }).finally(() => {\n                setLoading(false)\n            })\n        }\n    }, [props.url])\n\n    return (\n        <EchartCore option={option} loading={loading} />\n    )\n}\n"],"names":["defaultChartStyle","height","EchartCore","props","_useState","useState","_useState2","_slicedToArray","chartInstance","setChartInstance","id","Math","random","toString","substring","_useTranslation","useTranslation","t","option","i18n","useEffect","chartDom","document","getElementById","chart","echarts","setOption","_objectSpread","data","_jsx","Spin","spinning","loading","children","_jsxs","className","style","isNoData","InputSearch","inputRef","options","dataCache","setDataCache","_useState3","value","_useState4","setValue","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","debounceScroll","fun","timer","time","arguments","undefined","_len","args","Array","_key","clearTimeout","setTimeout","apply","concat","debounce","onScrollButtom","labelName","htmlFor","width","Input","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","ResizableTitle","_ref","onResize","restProps","_objectWithoutProperties","_excluded","Resizable","handle","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","header","dataFormat","setDataFormat","_useState5","_useState6","filterValue","setFilterValue","_useState7","columns","_useState8","cols","setCols","handleResize","_","_ref2","size","temp","_toConsumableArray","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","_useState9","scroll","_useState10","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","Space","direction","Modal","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","Checkbox","label","defaultValue","bottom","Button","type","Tabs","tab","text","onCopy","message","cursor","minHeight","titleNode","buttonNode","cancelExportData","Row","justify","align","Col","marginLeft","ConfigProvider","renderEmpty","flexDirection","src","emptyImg","alt","Table","components","cell","pagination","rowSelection","Title","Typography","styles","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","_Form$useForm","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","call","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","i","j","used","formatData","dataMap","param","set","handleFinishForm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","preVal","tarVal","wrap","_context","prev","stop","_x","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","_Fragment","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","FileUploadPlus","setFileLoading","_useState11","_useState12","fileList","setFileList","createMediaPreview","file","fileIndex","filetype","url","window","createObjectURL","URL","webkitURL","getObjectURL","currentFileList","splice","borderBottomLeftRadius","zIndex","color","controls","borderRadius","Upload","showUploadList","customRequest","tarList","Promise","all","resolve","reject","replace","reader","FileReader","readAsDataURL","onload","result","beforeUpload","_props$format","maxCount","isFormatOk","format","isLt2M","maxSize","status","InboxOutlined","VideoCameraAddOutlined","AudioOutlined","calculateId","strList","split","charCodeAt","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","linkageConfig","optionInlinkAge","configItem","dep","valueId","_props$form","effect","effectOption","findOptionInLinkAge","_props$form2","_defineProperty","tarConfig","setValueInConfig","tarConfigGroup","configList","setValueInConfigGroup","keys","_props$form3","formValues","entries","renderInput","itemProps","initialValue","extra","tips","Tooltip","placement","dangerouslySetInnerHTML","__html","QuestionCircleOutlined","description","disable","dispatchRenderFormItem","retry_info","onRetryInfoChange","renderInputSelect","autoSize","minRows","renderTextArea","isRefresh","SyncOutlined","multiple","renderSelect","DatePicker","locale","showTime","disabledDate","moment","endOf","renderDatePicker","renderRangePicker","Radio","renderRadio","renderFileUpload","renderFormItem","list","_ref4","_ref5","restField","alignItems","minWidth","listItem","labelAlign","danger","block","icon","MinusCircleOutlined","primaryKey","hidden","Steps","currentConfigGroupNameList","err","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","getParam","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","_useState13","_useState14","loadingDetail","setLoadingDetail","_useState15","_useState16","visableDetail","setVisableDetail","_useState17","_useState18","selectedRowKeys","setSelectedRowKeys","pageInfoInit","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","_useState19","_useState20","pageInfo","setPageInfo","_useState21","_useState22","currentColumns","setCurrentColumns","_useState23","_useState24","filterParams","setFilterParams","_useState25","_useState26","filterValues","_setFilterValues","filterValuesRef","setFilterValues","_useState27","_useState28","dynamicFormConfigAdd","setDynamicFormConfigAdd","_useState29","_useState30","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","_useState31","_useState32","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","_useState33","_useState34","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","customFormData","parse","_useState35","_useState36","dynamicFormDataAdd","setDynamicFormDataAdd","_useState37","_useState38","updateColumnsMap","setUpdateColumnsMap","_useState39","_useState40","labelMap","_setLabelMap","labelMapRef","_useState41","_useState42","dataDetail","setDataDetail","_useState43","_useState44","setTableWidth","_useState45","_useState46","permissions","setPermissions","_useState47","_useState48","filterParamsMap","setFilterParamsMap","_useState49","_useState50","helpUrl","setHelpUrl","_useState51","_useState52","baseUrl","_setBaseUrl","baseUrlRef","_useState53","_useState54","isImportData","setIsImportData","_useState55","_useState56","isDownLoadData","setIsDownLoadData","_useState57","_useState58","columnRelateFormat","setColumnRelateFormat","_useState59","_useState60","multipleAction","setMultipleAction","_useState61","_useState62","sorterParam","setSorterParam","_useState63","_useState64","setPrimaryKey","_useState65","_useState66","labelTitle","setLabelTitle","_useState67","_useState68","list_ui_type","setList_ui_type","_useState69","_useState70","list_ui_args","setList_ui_args","_useState71","_useState72","opsLink","setOpsLink","_useState73","_useState74","listColumns","setListColumns","_useState75","_useState76","isAllDataList","_setIsAllDataList","isAllDataListRef","_useState77","_useState78","isShowCollect","_setIsShowCollect","isShowCollectRef","_useState79","_useState80","isEchartShow","setIsEchartShow","_useState81","_useState82","setPageSize","_useState83","_useState84","listTitle","setListTitle","_useState85","_useState86","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","default","targetId","getADUGTemplateApiInfo","_res$data","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","ops_link","enable_favorite","echart","page_size","list_title","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","columnRelatedFormat","src_columns","des_columns","ePre","eNext","src_value","des_value","a","b","render","record","_cols_width$column$ty","tarRes","_ref3","actionList","_ref6","singleAction","single","tableAction","fixed","_props$related","Dropdown","overlay","Menu","ExclamationCircleOutlined","content","actionADUGTemplateFavorite","fetchData","actionADUGTemplateCancelFavorite","fetchDataDetail","_res$data2","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","okButtonProps","actionADUGTemplateDelete","confirmation","actionADUGTemplateSingle","link","open","tarColumns","addColumnsMap","reTryInfoQuene","reTryInfoFlag","formRes","hasOwnProperty","handleReTryInfo","tar","actionADUGTemplateRetryInfo","exist_add_args","_res$data3","formConfigAdd","formGroupConfigAdd","formReset","resTar","finally","itemInfo","tarFilter","_ref8","_ref9","oprList","operator","currentFilterValues","_ref10","_ref11","localCacheFilter","search","urlFilter","error","localFilter","setBaseUrl","setLabelMap","currentTableWidth","formatFilterParams","temlateId","model_name","opr","sourceOprList","currentOpr","_ref12","only_favorite","form_data","str_related","page","getADUGTemplateList","_res$data$result","count","getADUGTemplateDetail","detail","formatValue","last_name","uploadConfig","headers","authorization","isCSV","isXLS","isJson","isXLSX","notification","response","ModalForm","isArray","actionADUGTemplateAdd","_res$data4","tarIndex","listItemKey","listItemValue","actionADUGTemplateUpdate","whiteSpace","TitleHeader","isSubRoute","reload","RollbackOutlined","crumbs","idx","Content","MixSearch","ChartOptionTempalte","TableBox","Switch","checked","checkedChildren","unCheckedChildren","defaultChecked","actionADUGTemplateMuliple","ids","handleMultiRecord","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y","rowIndex","overflowY","card_width","card_height","itemIndex","wordBreak","Pagination","actionADUGTemplateChartOption","currentOps","eval"],"sourceRoot":""}