{"version":3,"file":"static/js/204.72f8286f.chunk.js","mappings":"mNA6Be,SAASA,EAAYC,GAChC,IACIC,EADEC,EAAKC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAGhDC,GAAkCC,EAAAA,EAAAA,UAAmBR,EAAMS,SAAW,IAAGC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAlEK,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0BN,EAAAA,EAAAA,UAASR,EAAMe,OAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA9CC,EAAKC,EAAA,GAAEC,EAAQD,EAAA,IAEtBE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAanB,EAAMoB,mBAAqBpB,EAAMS,SAAW,IAAIY,QAAO,SAAAC,GACtE,OAAgC,IAAzBA,EAAKC,QAAQR,EACxB,IAAMf,EAAMS,SAAW,GACvBI,EAAaM,EACjB,GAAG,CAACnB,EAAMS,WAEVS,EAAAA,EAAAA,YAAU,WACND,EAASjB,EAAMe,OAAS,GAE5B,GAAG,CAACf,EAAMe,QAEV,IAAMS,EAAe,SAACT,GAClBE,EAASF,GACTf,EAAMyB,UAAYzB,EAAMyB,SAASV,EACrC,EAeMW,EAAmB,SAACJ,GACtB,IAAMK,EAAUZ,EACVa,EAAQN,EAAKC,QAAQR,GAC3B,IAAe,IAAXa,EACA,OAAOC,EAAAA,EAAAA,KAAA,QAAAC,SAAOR,IAElB,IAAMS,EAAST,EAAKhB,UAAU,EAAGsB,GAC3BI,EAAUV,EAAKhB,UAAUsB,EAAQb,EAAMkB,QAC7C,OAAOC,EAAAA,EAAAA,MAAA,QAAAJ,SAAA,CAAOC,GAAOF,EAAAA,EAAAA,KAAA,QAAMM,UAAU,YAAWL,SAAEH,IAAgBK,IACtE,EAYMI,EAVW,SAACC,GAA+B,IACzCC,EADoBC,EAAIC,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAE/B,OAAO,WAA+B,IAAD,IAAAE,EAAAF,UAAAP,OAAjBU,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAL,UAAAK,GACpBC,aAAaR,GACbA,EAAQS,YAAW,WACfV,GAAOA,EAAIW,MAAM,KAAK,GAADC,OAAMN,GAC/B,GAAGJ,EACP,CACJ,CAEuBW,CAASlD,EAAMmD,gBAoBtC,OACIjB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBL,SAAA,CAE3B9B,EAAMoD,WAAYvB,EAAAA,EAAAA,KAAA,SAAOwB,QAASnD,EAAIiC,UAAU,mBAAkBL,SAAE9B,EAAMoD,YAAqB,MAEnGlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAamB,MAAO,CAAEC,MAAOvD,EAAMuD,OAAS,QAAYzB,SAAA,EACnED,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CACFF,MAAO,CAAEC,MAAO,QAChBE,SAAUzD,EAAMyD,SAChBvD,GAAIA,EACJwD,YAAa1D,EAAM0D,aAAe,GAClCC,UAAW3D,EAAM2D,WAAa,IAC9BlC,SAAU,SAACmC,GAAgC,OAAWpC,EAAaoC,EAAEC,OAAO9C,MAAM,EAClF+C,WA9DO,SAACF,GAEU,KAA1BA,EAAEG,YAAYC,UACd/D,EAASgE,MAAQhE,EAASgE,OAC1BjE,EAAMkE,UAAYlE,EAAMkE,SAASN,EAAEO,cAAcpD,OAEzD,EAyDgBA,MAAOA,EACPqD,IAAK,SAAAC,GAAO,OAAIpE,EAAWoE,CAAO,KAEtCxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,CAACnC,UAAU,kBAK1BvB,EAAUqB,QAASC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uBAAuBoC,SAxC/C,SAACX,GAClBA,EAAEY,kBASF,IAAQL,EAAkBP,EAAlBO,cACAM,EAA0CN,EAA1CM,UAAWC,EAA+BP,EAA/BO,aAA+BP,EAAjBQ,aACCD,EAAeD,EAChC,IACbzE,EAAMmD,gBAAkBf,GAEhC,EAwB4FkB,MAAO,CAAE,UAAY,GAADL,OAAKjD,EAAM4E,UAAS,OAAO9C,SAAA,CAEvH9B,EAAM6E,SAAUhD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAcmB,MAAO,CAAEwB,MAAM,GAAD7B,OAAK,EAAC,MAAM8B,IAAI,GAAD9B,OAAK,EAAC,OAAOnB,UACnFD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,WAAWmB,MAAO,CAAEwB,MAAM,GAAD7B,OAAK,EAAC,MAAM8B,IAAI,GAAD9B,OAAK,EAAC,WACxD,KAGTrC,EAAUoE,KAAI,SAAC1D,EAAMM,GACjB,OAAOC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,SAAS8C,YAAa,kBApF/C,SAAClE,GACjBS,EAAaT,GACbf,EAAMkF,SAAWlF,EAAMkF,QAAQnE,EACnC,CAiF+EoE,CAAY7D,EAAK,EAACQ,SAAcJ,EAAiBJ,IAAzBM,EACnF,OAEA,OAIxB,C,2UCtIMwD,EAAkBC,EAAQ,OA6B1BC,EAAiB,SAAHC,GAAgD,IAA1CC,EAAQD,EAARC,SAAUjC,EAAKgC,EAALhC,MAAUkC,GAASC,EAAAA,EAAAA,GAAAH,EAAAI,GACtD,OAAKpC,GAKJ1B,EAAAA,EAAAA,KAAC+D,EAAAA,UAAS,CACTrC,MAAOA,EACPsC,OAAQ,EACRC,QACCjE,EAAAA,EAAAA,KAAA,QACCM,UAAU,yBACV+C,QAAS,SAACtB,GACTA,EAAEY,iBACH,IAGFgB,SAAUA,EACVO,cAAe,CAAEC,sBAAsB,GAAQlE,UAE/CD,EAAAA,EAAAA,KAAA,MAAAoE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQR,GAAS,IAAEnC,OAAK2C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAgB,OAATR,QAAS,IAATA,OAAS,EAATA,EAAWnC,OAAK,IAAE4C,WAAY,eAlBvDrE,EAAAA,EAAAA,KAAA,MAAAoE,EAAAA,EAAAA,GAAA,GAAQR,GAqBjB,EAiRA,EA/QiB,SAACzF,GACjB,IAAAO,GAAkDC,EAAAA,EAAAA,WAAS,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1D4F,EAAiBzF,EAAA,GAAE0F,EAAoB1F,EAAA,GAC9CI,GAAoCN,EAAAA,EAAAA,UAAyC,CAC5E6F,OAAQ,GACRC,KAAM,KACLtF,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAHKyF,EAAUvF,EAAA,GAAEwF,EAAaxF,EAAA,GAIhCyF,GAAsCjG,EAAAA,EAAAA,UAAgB,IAAGkG,GAAA/F,EAAAA,EAAAA,GAAA8F,EAAA,GAAlDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAGlCG,GAAwBrG,EAAAA,EAAAA,UAASR,EAAM8G,SAAQC,GAAApG,EAAAA,EAAAA,GAAAkG,EAAA,GAAxCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAe,SAACtF,GACrB,OAAO,SAACuF,EAAMC,GAAqB,IAAjBC,EAAID,EAAJC,KACjB,KAAIA,EAAK9D,MAAQ,KAAjB,CACA,IAAM+D,GAAIC,EAAAA,EAAAA,GAAOP,GACjBM,EAAK1F,IAAMqE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQqB,EAAK1F,IAAM,IAAE2B,MAAO8D,EAAK9D,QAC5C,IAAMiE,EAAaF,EAAKG,QAAO,SAACC,EAAUC,GAAS,OAAKD,EAAMC,EAAKpE,OAAS,GAAG,GAAE,GAAK,IACtFqE,aAAaC,QAAQ7H,EAAM8H,UAAY,GAAIC,KAAKC,UAAUV,IAE1DW,GAAqBhC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIiC,GAAkB,IAAEC,EAAGX,KAClDP,EAAQK,EAPoB,CAQ7B,CACD,EACMc,EAAgBpB,EAAKhC,KAAI,SAACqD,EAAUzG,GACzC,OAAAqE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIoC,GAAG,IACN9E,MAAO8E,EAAI9E,OAAS,IACpB+E,aAAc,SAACC,GACd,MAAO,CACNhF,MAAOgF,EAAOhF,MACdiC,SAAU0B,EAAatF,GAEzB,GAEF,IACA4G,GAAoDhI,EAAAA,EAAAA,UAASR,EAAMyI,QAAOC,GAAA/H,EAAAA,EAAAA,GAAA6H,EAAA,GAAnEN,EAAkBQ,EAAA,GAAET,EAAqBS,EAAA,GAChDC,GAAoBC,EAAAA,EAAAA,MAAZC,EAACF,EAADE,EAAOF,EAAJG,MAEX5H,EAAAA,EAAAA,YAAU,WACT+F,EAAQjH,EAAM8G,QACf,GAAG,CAAC9G,EAAM8G,WAEV5F,EAAAA,EAAAA,YAAU,WACT+G,EAAsBjI,EAAMyI,OAC7B,GAAG,CAACzI,EAAMyI,UAEVvH,EAAAA,EAAAA,YAAU,WACT,GAAIlB,EAAM+I,WAAY,CACrB,IAAMjC,EAAU9G,EAAM8G,QAAQzF,QAAO,SAACC,GAAS,OAAMqF,EAAYpF,QAAQD,EAAK0H,UAAU,IACxFC,EAAoBnC,EAAS9G,EAAM+I,WACpC,CACD,GAAG,CAAC/I,EAAM+I,WAAY/I,EAAM8G,UAE5B,IAOMmC,EAAsB,WAAoC,IAAnCC,EAAW1G,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAI8D,EAAW9D,UAAAP,OAAA,EAAAO,UAAA,QAAAC,EACnDqE,EAAUoC,EAAYlE,KAAI,SAAC1D,GAAS,OAAKA,EAAK0H,SAAS,IAAE3H,QAAO,SAACC,GAAY,MAAc,WAATA,CAAiB,IACnG6H,EAAcD,EAAYlE,KAAI,SAAC1D,GAAS,OAAKA,EAAK8H,KAAK,IAAE/H,QAAO,SAACC,GAAY,OAAKA,IAASuH,EAAE,eAAK,IAClGQ,EAAe,GAErB/C,EAAKgD,SAAQ,SAACC,GACb,IAAMC,EAAW,CAAC,EAClB1C,EAAQ9B,KAAI,SAACyE,GACZ,IAAMC,EAAMH,EAAQE,GACpBD,EAAIC,GAAWC,GAAO,EACvB,IACAL,EAAQM,KAAKH,EACd,IAEAhD,EAAc,CACbH,OAAQ8C,EACR7C,KAAM+C,GAER,EAgBMO,EAAmB,WACxB,IAAMvD,EAASE,EAAWF,OACpBC,EAAOC,EAAWD,KACpBuD,EAAM,GA2BV,OA1BIxD,EAAOpE,QAAUqE,EAAKrE,QACzB4H,EACC,IACAxD,EAAOyD,KAAK,KADZ,MAKDxD,EAAKgD,SAAQ,SAACE,GACb,IAAMO,EAASC,OAAOC,OAAOT,GAAKxE,KAAI,SAAC1D,GACtC,MAAa,KAATA,EACI,IAEDA,CACR,IACAuI,EACCA,EACA,IACAE,EAAOD,KAAK,KAFZD,KAMF,KAEAA,EAAM,GAGAA,CACR,EAEMK,EAAmB,WACxB,IAAM7D,EAASE,EAAWF,OACpBC,EAAOC,EAAWD,KACpBuD,EAAM,GAsBV,OArBIxD,EAAOpE,QAAUqE,EAAKrE,QACzB4H,EACCxD,EAAOyD,KAAK,MAAI,KAGjBxD,EAAKgD,SAAQ,SAACE,GACb,IAAMO,EAASC,OAAOC,OAAOT,GAAKxE,KAAI,SAAC1D,GACtC,MAAa,KAATA,EACI,IAEDA,CACR,IACAuI,EACCA,EACAE,EAAOD,KAAK,MAAI,IAGlB,KAEAD,EAAM,GAEAA,CACR,EAEA,OACC3H,EAAAA,EAAAA,MAACiI,EAAAA,EAAK,CAAChI,UAAU,WAAWiI,UAAU,WAAW/C,KAAK,SAAQvF,SAAA,EAC7DI,EAAAA,EAAAA,MAACmI,EAAAA,EAAK,CACL9G,MAAO,IACP+G,cAAc,EACdC,UAAU,EACVC,UAAW,CAAE5F,UAAW,IAAK6F,SAAU,QACvCC,QAASvE,EACTiD,MAAOP,EAAE,4BACT8B,SAAU,WACTvE,GAAqB,EACtB,EACAwE,OAAQ,KAAK9I,SAAA,EAEbI,EAAAA,EAAAA,MAAA,OAAKoB,MAAO,CAAEuH,SAAU,YAAa/I,SAAA,EACpCI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAML,SAAA,EAACI,EAAAA,EAAAA,MAAA,QAAMC,UAAU,MAAKL,SAAA,CAAE+G,EAAE,oDAAY,aAAQhH,EAAAA,EAAAA,KAACiJ,EAAAA,EAAAA,MAAc,CACjFrK,QAAST,EAAM8G,QACb9B,KAAI,SAAC1D,GAAS,MAAM,CAAEyJ,MAAOzJ,EAAK8H,MAAOrI,MAAOO,EAAK0H,UAAW,IAChE3H,QAAO,SAACC,GAAS,MAAoB,WAAfA,EAAKP,KAAkB,IAC/CiK,aAAc,GACdjK,MAAO4F,EACPlF,SAAU,SAACwI,GACVrD,EAAeqD,GACf,IAAMnD,EAAU9G,EAAM8G,QAAQzF,QAAO,SAACC,GAAS,OAAM2I,EAAO1I,QAAQD,EAAK0H,UAAU,IACnFC,EAAoBnC,EAAS9G,EAAM+I,WACpC,QAED7G,EAAAA,EAAAA,MAAA,OAAKoB,MAAO,CAAEuH,SAAU,WAAY/F,MAAO,EAAGmG,OAAQ,GAAInJ,SAAA,EACzDD,EAAAA,EAAAA,KAACqJ,EAAAA,EAAM,CACN7D,KAAK,QACL8D,KAAK,OACLjG,QAAS,WACR0B,EACC5G,EAAM8G,QACJ9B,KAAI,SAAC1D,GAAS,OAAKA,EAAK0H,SAAS,IACjC3H,QAAO,SAACC,GAAS,MAAc,WAATA,CAAiB,KAE1C2H,EAAoBjJ,EAAM8G,QAAS9G,EAAM+I,WAC1C,EAAEjH,SAED+G,EAAE,mBAEJhH,EAAAA,EAAAA,KAACqJ,EAAAA,EAAM,CACN7D,KAAK,QACL8D,KAAK,OACLjG,QAAS,WACR0B,EAAe,IACfqC,EAAoB,GAAIjJ,EAAM+I,WAC/B,EAAEjH,SAED+G,EAAE,yBAKN3G,EAAAA,EAAAA,MAACkJ,EAAAA,EAAI,CAAAtJ,SAAA,EACJD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAAA,QAAY,CAACC,IAAI,mBAAQvJ,UACzBD,EAAAA,EAAAA,KAACuD,EAAe,CAACkG,KAAM1B,IAAoB2B,OAAQ,kBAAMC,EAAAA,GAAAA,QAAgB3C,EAAE,8CAAW,EAAC/G,UACtFD,EAAAA,EAAAA,KAAA,OAAKyB,MAAO,CAAEmI,OAAQ,UAAWC,UAAW,KAAM5J,UACjDD,EAAAA,EAAAA,KAAA,QAAAC,SAAO8H,WAHqB,SAO/B/H,EAAAA,EAAAA,KAACuJ,EAAAA,EAAAA,QAAY,CAACC,IAAI,mBAAQvJ,UACzBD,EAAAA,EAAAA,KAACuD,EAAe,CAACkG,KAAMpB,IAAoBqB,OAAQ,kBAAMC,EAAAA,GAAAA,QAAgB3C,EAAE,8CAAW,EAAC/G,UACtFD,EAAAA,EAAAA,KAAA,OAAKyB,MAAO,CAAEmI,OAAQ,UAAWC,UAAW,KAAM5J,UACjDD,EAAAA,EAAAA,KAAA,QAAAC,SAAOoI,WAHqB,cAmBhClK,EAAM2L,WAAa3L,EAAM4L,aAAe5L,EAAM6L,kBAAmB3J,EAAAA,EAAAA,MAAC4J,EAAAA,EAAG,CAACC,QAAQ,gBAAgBC,MAAM,SAAQlK,SAAA,EAC3GD,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAAnK,UACHD,EAAAA,EAAAA,KAACsI,EAAAA,EAAK,CAAC6B,MAAM,SAAQlK,SAAE9B,EAAM2L,eAE9B9J,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAAnK,UACHI,EAAAA,EAAAA,MAACiI,EAAAA,EAAK,CAAC6B,MAAM,SAAQlK,SAAA,CACnB9B,EAAM4L,WACN5L,EAAM6L,iBAAmB,MACzBhK,EAAAA,EAAAA,KAACqJ,EAAAA,EAAM,CAAC5H,MAAO,CAAE4I,WAAY,GAAKhH,QAAS,kBAAMkB,GAAqB,EAAK,EAACtE,SAC1E+G,EAAE,sCAKC,MAEVhH,EAAAA,EAAAA,KAACsK,EAAAA,GAAc,CAACC,YAxMW,WAAH,OACzBlK,EAAAA,EAAAA,MAAC4J,EAAAA,EAAG,CAACC,QAAQ,SAASC,MAAM,SAAS1I,MAAO,CAAEuC,OAAQ,IAAKwG,cAAe,UAAWvK,SAAA,EACpFD,EAAAA,EAAAA,KAAA,OAAKyK,IAAKC,EAAUjJ,MAAO,CAAEC,MAAO,KAAOiJ,IAAI,MAC/C3K,EAAAA,EAAAA,KAAA,OAAAC,SAAM+G,EAAE,gCACH,EAoM6C/G,UACjDD,EAAAA,EAAAA,KAAC4K,EAAAA,EAAK,CACLpF,KAAMrH,EAAMqH,MAAQ,SACpB0C,OAAQ/J,EAAM+J,OAAS/J,EAAM+J,OAAS,KACtChB,WAAY/I,EAAM+I,WAElB2D,WAAY,CAAErG,OAAQ,CAAEsG,KAAMrH,IAC9BwB,QAASsB,EACTwE,YAAiC,IAArB5M,EAAM4M,aAAoB3G,EAAAA,EAAAA,GAAA,GAAQjG,EAAM4M,YACpDnE,OAAQP,EACRrD,QAAS7E,EAAM6E,QACfpD,SAAUzB,EAAMyB,SAChBoL,aAAc7M,EAAM6M,mBAKzB,C,iOCzUaC,EAAY,SAACC,GAStB,OAAOC,EAAAA,EAAAA,KAAW,oBAAqBD,EAC3C,EAEaE,EAAyB,SAACC,GAUnC,OAAOF,EAAAA,EAAAA,IAAU,cAAD/J,OAAeiK,GACnC,EAcaC,EAAyB,SAACjN,EAAYkN,GAG/C,OAAOJ,EAAAA,EAAAA,IAAU,sBAAD/J,OAAuB/C,GAAM,CACzC6M,OAAQ,CACJK,UAAAA,IAGZ,EAEaC,EAAoB,SAACnN,GAI9B,OAAO8M,EAAAA,EAAAA,IAAU,gBAAD/J,OAAiB/C,GACrC,EAEaoN,EAAe,SAACpN,GAIzB,OAAO8M,EAAAA,EAAAA,IAAU,cAAD/J,OAAe/C,GACnC,EA8BaqN,EAAoB,WAG7B,OAAOP,EAAAA,EAAAA,IAAU,eACrB,E,sDC9Be,SAASQ,EAASxN,GAC/B,OACE6B,EAAAA,EAAAA,KAAA4L,EAAAA,SAAA,CAAA3L,UACED,EAAAA,EAAAA,KAAC6L,EAAAA,GAAU,CACTC,MAAOC,EAAAA,EACP7M,MAAOf,EAAMe,MACbU,SAAUzB,EAAMyB,SAChBoM,WAAY,EACVC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,GAAa,CACXC,KAAM,EACNC,WAAY,UACZC,UAAW,gBAIvB,C,2LCjEMC,EAAqC,CACvC,MAAS,EACT,MAAS,EACT,QAAW,EACX,IAAO,GAGLC,EAAgB,SAACC,GACnB,OAAQA,GACJ,IAAK,OACL,IAAK,UACD,OAAOxM,EAAAA,EAAAA,KAACyM,EAAAA,EAAe,IAC3B,IAAK,UACD,OAAOzM,EAAAA,EAAAA,KAAC0M,EAAAA,EAAmB,CAACjL,MAAO,CAAEkL,MAAO,aAChD,IAAK,OACD,OAAO3M,EAAAA,EAAAA,KAAC4M,EAAAA,EAAsB,IAClC,QACI,OAAO,KAEnB,EAEe,SAASC,EAAS1O,GAC7B,IAAA2I,GAAoBC,EAAAA,EAAAA,MAAZC,EAACF,EAADE,EACRtI,GADeoI,EAAJG,MACmCtI,EAAAA,EAAAA,WAAS,IAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAtDoO,EAAejO,EAAA,GAAEkO,EAAkBlO,EAAA,GAC1CI,GAA0CN,EAAAA,EAAAA,WAAS,GAAMQ,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAnC+N,GAAF7N,EAAA,GAAkBA,EAAA,IAGtCyF,GAA0CjG,EAAAA,EAAAA,WAAS,GAAKkG,GAAA/F,EAAAA,EAAAA,GAAA8F,EAAA,GAAlCqI,GAAFpI,EAAA,GAAkBA,EAAA,IAgBtCG,GAAmCrG,EAAAA,EAAAA,UAAiB,KAAIuG,GAAApG,EAAAA,EAAAA,GAAAkG,EAAA,GAAjDuG,EAASrG,EAAA,GAAEgI,EAAahI,EAAA,GACzBiI,GAAeC,EAAAA,EAAAA,QAAO7B,GACtB8B,EAAe,SAAC5I,GAClB0I,EAAaG,QAAU7I,EACvByI,EAAczI,EAClB,EAEAkC,GAAyChI,EAAAA,EAAAA,UAAiB,KAAIkI,GAAA/H,EAAAA,EAAAA,GAAA6H,EAAA,GAAvD4G,EAAY1G,EAAA,GAAE2G,EAAgB3G,EAAA,GAC/B4G,GAAkBL,EAAAA,EAAAA,QAAOG,GAUzBG,EAAmB,SAACC,GACtB,IAAMnJ,EAASmJ,EAAO,IAAM,GAEtBC,EADOD,EAAOE,MAAM,GACF1K,KAAI,SAACwE,GAEzB,OADgBA,EAAI/B,QAAO,SAACC,EAAKC,EAAM/F,GAAK,OAAAqE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWyB,GAAG,IAAAiI,EAAAA,EAAAA,GAAA,GAAGtJ,EAAOzE,GAAS+F,GAAI,GAAK,CAAC,EAE3F,IAWA,MAAO,CACHiI,OAXiBvJ,EAAOrB,KAAI,SAAA1D,GAAI,MAAK,CACrC8H,MAAO9H,EACP0H,UAAW1H,EACXuO,IAAKvO,EACLiC,MAAO,IACV,IAOG+C,KAAMmJ,EAEd,EAkDA,OACIvN,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EAeID,EAAAA,EAAAA,KAACwI,EAAAA,EAAK,CACFjB,MAAOP,EAAE,gBACT6B,QAASiE,EACT/D,OAAQ,KACRkF,gBAAc,EACdnF,SAAU,WACNuE,EAAa,KACbN,GAAmB,EACvB,EAAE9M,UACFI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACII,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYL,SAAA,EACvBI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKL,SAAA,CAAE+G,EAAE,kCAAS,aACjChH,EAAAA,EAAAA,KAACkO,EAAAA,EAAM,CAACzM,MAAO,CAAEC,MAAO,KAAOxC,MAAOiO,EAAaG,QAAS1O,QAAS,CAAC,CAClEsK,MAAO,IACPhK,MAAO,KACR,CACCgK,MAAO,IACPhK,MAAO,KACR,CACCgK,MAAO,MACPhK,MAAO,QACPU,SAAU,SAACV,GACXmO,EAAanO,EACjB,QAEJc,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWL,UACtBD,EAAAA,EAAAA,KAACqJ,EAAAA,EAAM,CAACC,KAAK,UAAUjG,QAAS,WAC5BiI,EAAuBmC,EAAgBH,QAASH,EAAaG,SAASa,MAAK,SAAAtG,GACvEuG,OAAOC,KAAKxG,EAAIpD,KAAK6J,aAAc,OACvC,IAAGC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAChB,GACJ,EAAEvO,SAAE+G,EAAE,0BAIlBhH,EAAAA,EAAAA,KAAC2O,EAAAA,EAAQ,CAACrO,UAAU,gCAAgCsO,iBAAkB,CAAC,UAAWhP,SA/HzE,SAACoO,GACdS,QAAQC,IAAIV,EAChB,EA6H6G/N,UAE5FkI,OAAO0G,QAAQ1Q,EAAM2Q,QAAQlJ,QAAO,SAACC,EAAsBnC,GAAA,IAAA6B,GAAAzG,EAAAA,EAAAA,GAAA4E,EAAC,GAAOxE,GAAFqG,EAAA,GAAOA,EAAA,aAAAnE,QAAAsE,EAAAA,EAAAA,GAAWG,GAAG,CAAE3G,GAAK,GAAI,KAAO,IAAI6P,UAAUvP,QAAO,SAAAC,GAAI,QAAMA,EAAKuP,KAAK,IAAE7L,KAAI,SAAC1D,EAAMM,GAC3J,OACIM,EAAAA,EAAAA,MAACsO,EAAAA,EAAAA,MAAc,CAACrO,UAAW,CAAC,6BAA6B,UAADc,OAAY3B,EAAK+M,SAAUvE,KAAK,KAAMzD,OAAM,GAAApD,OAAK4F,EAAE,uBAAM5F,OAAG3B,EAAKuP,OAA+BC,OACpJ5O,EAAAA,EAAAA,MAAAuL,EAAAA,SAAA,CAAA3L,SAAA,EACII,EAAAA,EAAAA,MAACgJ,EAAAA,EAAM,CAAC/I,UAAU,OAAOgJ,KAAK,UAAU9D,KAAK,QAAQnC,QAAS,SAACtB,GAC3DA,EAAEY,kBACFxE,EAAM+Q,SAASzP,EAAKuP,MACxB,EAAE/O,SAAA,CAAE+G,EAAE,iBAAMhH,EAAAA,EAAAA,KAACmP,EAAAA,EAAc,QAC3B9O,EAAAA,EAAAA,MAACgJ,EAAAA,EAAM,CAACC,KAAK,UAAU9D,KAAK,QAAQnC,QAAS,SAACtB,GAC1CA,EAAEY,kBACFxE,EAAMiR,QAAQ3P,EAAKuP,MACvB,EAAE/O,SAAA,CACA+G,EAAE,iBAAMhH,EAAAA,EAAAA,KAACqP,EAAAA,EAAY,UAE9BpP,SAAA,EACGI,EAAAA,EAAAA,MAACiP,EAAAA,EAAK,CAAC9J,KAAK,QAAQ8H,QAAShB,EAAQ7M,EAAK0M,MAAMlM,SAAA,EAC5CD,EAAAA,EAAAA,KAACsP,EAAAA,EAAAA,KAAU,CAAC/H,MAAOP,EAAE,4BAASuI,KAA6B,IAAvBjD,EAAQ7M,EAAK0M,MAAcI,EAAc9M,EAAK+M,QAAU,QAC5FxM,EAAAA,EAAAA,KAACsP,EAAAA,EAAAA,KAAU,CAAC/H,MAAOP,EAAE,gBAAOuI,KAA6B,IAAvBjD,EAAQ7M,EAAK0M,MAAcI,EAAc9M,EAAK+M,QAAU,QAC1FxM,EAAAA,EAAAA,KAACsP,EAAAA,EAAAA,KAAU,CAAC/H,MAAOP,EAAE,gBAAOuI,KAA6B,IAAvBjD,EAAQ7M,EAAK0M,MAAcI,EAAc9M,EAAK+M,QAAU,QAC1FxM,EAAAA,EAAAA,KAACsP,EAAAA,EAAAA,KAAU,CAAC/H,MAAOP,EAAE,4BAASuI,KAA6B,IAAvBjD,EAAQ7M,EAAK0M,MAAcI,EAAc9M,EAAK+M,QAAU,WAEhGxM,EAAAA,EAAAA,KAACwP,EAAAA,EAAQ,CACLhK,KAAM,QACNxC,SAAS,EACTgH,kBAAkB,EAClB9B,OAAQ,SAACuH,GACL,OAAOvJ,KAAKC,UAAUsJ,EAC1B,EACAxK,QAAS,CAAC,CACNsC,MAAOP,EAAE,sBACTG,UAAW,UACX6G,IAAK,UACL0B,OAAQ,SAACjG,GACL,OAAOzJ,EAAAA,EAAAA,KAAC2P,EAAAA,EAAO,CACXC,UAAU,MACVrI,MAAOkC,EAAKxJ,UAEZD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAaL,SAAEwJ,KAEtC,GAWJ,CACIlC,MAAOP,EAAE,4BACTG,UAAW,WACX6G,IAAK,YACN,CACCzG,MAAOP,EAAE,4BACTG,UAAW,WACX6G,IAAK,YACN,CACCzG,MAAOP,EAAE,gBACTG,UAAW,SACX6G,IAAK,SACL0B,OAAQ,SAACjG,GACL,OAAOzJ,EAAAA,EAAAA,KAAA,QAAMM,UAAW,CAAC,KAADc,OAAM3B,EAAK+M,SAAUvE,KAAK,KAAKhI,SAAEwJ,GAC7D,GACD,CACClC,MAAOP,EAAE,gBACTG,UAAW,SACX6G,IAAK,SACL0B,OAAQ,WACJ,OAAOrP,EAAAA,EAAAA,MAAAuL,EAAAA,SAAA,CAAA3L,SAAA,EACHD,EAAAA,EAAAA,KAAA,QAAMM,UAAU,YAAY+C,QAAS,WAEjCmF,EAAAA,EAAAA,KAAW,CACPjB,MAAOP,EAAE,4BACTtF,MAAO,IACPmO,OAAQ7I,EAAE,gBACV8I,SACIzP,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACII,EAAAA,EAAAA,MAAC4J,EAAAA,EAAG,CAAC3J,UAAU,OAAML,SAAA,EACjBD,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,EAAE9P,UAACD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAML,UAACI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAS+G,EAAE,4BAAQ,iBACvDhH,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,GAAG9P,SAAER,EAAKuQ,gBAEzB3P,EAAAA,EAAAA,MAAC4J,EAAAA,EAAG,CAAC3J,UAAU,OAAML,SAAA,EACjBD,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,EAAE9P,UAACD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAML,UAACI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAS+G,EAAE,4BAAQ,iBACvDhH,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,GAAG9P,SAAER,EAAKwQ,eAEzB5P,EAAAA,EAAAA,MAAC4J,EAAAA,EAAG,CAAC3J,UAAU,OAAML,SAAA,EACjBD,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,EAAE9P,UAACD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAML,UAACI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAS+G,EAAE,gBAAM,iBACrDhH,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,GAAG9P,SAAER,EAAK+M,aAEzBnM,EAAAA,EAAAA,MAAC4J,EAAAA,EAAG,CAAC3J,UAAU,OAAML,SAAA,EACjBD,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,EAAE9P,UAACD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAML,UAACI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAS+G,EAAE,kCAAS,iBACxDhH,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,GAAG9P,SAAER,EAAKqQ,cAEzBzP,EAAAA,EAAAA,MAAC4J,EAAAA,EAAG,CAAC3J,UAAU,OAAML,SAAA,EACjBD,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,EAAE9P,UAACD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAML,UAACI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAS+G,EAAE,4BAAQ,iBACvDhH,EAAAA,EAAAA,KAACoK,EAAAA,EAAG,CAAC2F,KAAM,GAAG9P,SAAER,EAAKkK,gBAIjCuG,KAAI,WAAK,GAEjB,EAAEjQ,SAAE+G,EAAE,kBAEc,QAAdvH,EAAK0M,MAAkC,YAAhB1M,EAAK+M,QAAwBxM,EAAAA,EAAAA,KAAA,QAAMM,UAAU,YAAY+C,QAAS,WACvFmF,EAAAA,EAAAA,QAAc,CACVjB,MAAOP,EAAE,4BACTuI,MAAMvP,EAAAA,EAAAA,KAACmQ,EAAAA,EAAY,IACnBL,QAAS,GACTD,OAAQ7I,EAAE,gBACVoJ,WAAYpJ,EAAE,gBACdkJ,KAAI,WACA,OAAO,IAAIG,SAAQ,SAACC,EAASC,GACzB9E,EAAahM,EAAKuP,OAAOb,MAAK,SAAAtG,GAC1ByI,EAAQ,GACZ,IAAG/B,OAAM,SAAAC,GACL+B,GACJ,GACJ,IACKpC,MAAK,SAACtG,GACH8B,EAAAA,GAAAA,QAAgB3C,EAAE,4BACtB,IACCuH,OAAM,WACH5E,EAAAA,GAAAA,MAAc3C,EAAE,4BACpB,GACR,EACA8B,SAAQ,WAAK,GAErB,EAAE7I,SAAE+G,EAAE,kBAAgB,KAGpBvH,EAAKiP,KAAM1O,EAAAA,EAAAA,KAAA,QAAMM,UAAU,YAAY+C,QAAS,WAC9C+K,OAAOC,KAAK5O,EAAKiP,IAAK,OAC1B,EAAEzO,SAAE+G,EAAE,kBAAgB,KAGR,QAAdvH,EAAK0M,MAAkC,YAAhB1M,EAAK+M,QAAuBxM,EAAAA,EAAAA,KAAA,QAAMM,UAAU,YAAY+C,QAAS,WACpF4J,GAAiB,GACjBzB,EAAkB/L,EAAKuP,OAAOb,MAAK,SAAAtG,GAC/BmF,GAAiB,GACjB,IAAMW,EAAS9F,EAAIpD,KAAKkJ,OACxBD,EAAiBC,GACjB,IAAM6C,EAAa9C,EAAiBC,GAEpCnF,EAAAA,EAAAA,KAAW,CACPjB,MAAOP,EAAE,4BACT8I,SACI9P,EAAAA,EAAAA,KAAA,OAAAC,UAIID,EAAAA,EAAAA,KAACwP,EAAAA,EAAQ,CAELhK,KAAM,QACNxC,SAAS,EACTgH,kBAAkB,EAClB9B,OAAQ,SAACuH,GACL,OAAOvJ,KAAKC,UAAUsJ,EAC1B,EACAxK,QAASuL,EAAWzC,OACpBhD,YAAY,EACZ7D,WAAYsJ,EAAW/L,KACvBmC,OAAQ,CAAEN,EAAG,YAIzB4J,KAAI,WAAK,GAEjB,IAAG3B,OAAM,SAAAC,GAAS,IAAGiC,SAAQ,WACzBxD,GAAiB,EACrB,GACJ,EAAEhN,SAAE+G,EAAE,kBAAgB,KAGR,QAAdvH,EAAK0M,MAAkC,YAAhB1M,EAAK+M,QAAuBxM,EAAAA,EAAAA,KAAA,QAAMM,UAAU,OAAO+C,QAAS,WArT3G,IAACoB,IAuT2ChF,EAAKuP,MAtTrEvB,EAAgBH,QAAU7I,EAC1B+I,EAAiB/I,GAsT+BsI,GAAmB,EACvB,EAAE9M,SAAE+G,EAAE,kBAAgB,OAGlC,IAEJ+D,YAAY,EACZ7D,WAAY,CAAC,CACT4I,QAASrQ,EAAKqQ,QACdY,SAAUjR,EAAKiR,UAAY,IAC3BC,MAAOlR,EAAKkR,OAAS,IACrBC,SAAUnR,EAAKuQ,UACfC,SAAUxQ,EAAKwQ,UAAY,IAC3BzD,OAAQ/M,EAAK+M,aAEnB,QAAApL,OA/LyIrB,GAkMvJ,QA4DpB,C,gFCzbM8Q,GAAiBC,EAAAA,YAAiB,SAAC3S,EAAeoE,GACpD,IAAAuE,GAAoBC,EAAAA,EAAAA,MAAZC,EAACF,EAADE,EACR+J,GADejK,EAAJG,KACI+J,GAAAA,EAAAA,WAARC,GAAsBnS,EAAAA,EAAAA,GAAAiS,EAAA,GAAlB,GACXrS,GAAwBC,EAAAA,EAAAA,aAAeG,EAAAA,EAAAA,GAAAJ,EAAA,GAAnB,IAEpBwS,EAAAA,EAAAA,qBAAoB3O,GAAK,iBAAO,CAC5B4O,SAAU,WACN,OAAO,IAAId,SAAQ,SAACC,EAASC,GACzBU,EAAKG,iBAAiBjD,MAAK,SAAAtG,GACvByI,EAAQzI,EACZ,IAAG0G,OAAM,SAAAC,GACL+B,EAAO/B,EACX,GACJ,GACJ,EACA6C,QAAS,SAAC5M,GACNwM,EAAKK,eAAe7M,EACxB,EACH,KAEDpF,EAAAA,EAAAA,YAAU,WACFlB,EAAMoT,WACNN,EAAKK,eAAenT,EAAMoT,UAElC,GAAG,CAACpT,EAAM2Q,SAEV,IAyEM0C,EAAyB,SAAC/R,GAA8F,IAA7DgS,EAA8B9Q,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/F,OAAQlB,EAAK6J,MACT,IAAK,QACD,OA3EDtJ,EAAAA,EAAAA,KAAA,UA4EH,IAAK,SACD,OA1ES,SAAC+N,EAAmC0D,GACrD,IAAM7S,EAA0BmP,EAAO7O,OAAS,GAChD,OAAOc,EAAAA,EAAAA,KAACgR,GAAAA,EAAAA,MAAS5M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEb8E,MAAO6E,EAAO7E,MACdwI,KAAM3D,EAAO1P,GACbsT,MAAO,CACH,CACIC,UAAU,EACVjI,QAAQ,GAADvI,OAAK4F,EAAE,uBAAM5F,OAAG2M,EAAO7E,SAGtC2I,aAAc9D,EAAO5E,aACrB1H,MAAO,CAAEqQ,aAAc,EAAGC,YAAa,KACnCN,GAAS,IAAAxR,UAEbD,EAAAA,EAAAA,KAACkO,GAAAA,EAAM,CACHzM,MAAO,CAAEC,MAAO,KAChBsQ,KAAMjE,EAAOkE,SAAW,gBAAarR,EACrCsR,YAAU,EACVtQ,SAAUmM,EAAOoE,QACjBC,iBAAiB,QACjBvQ,YAAakM,EAAOsE,aAAW,GAAAjR,OAAO4F,EAAE,sBAAM,KAAA5F,OAAI2M,EAAO7E,OACzDtK,QAASA,EACTgB,SAAU,SAACV,EAAOoT,GACd,GAAIA,EAAUC,OAAQ,CAIlB,IAHA,IAAMC,EAAWF,EAAUC,OAAOC,SAC5BC,EAAeH,EAAUC,OAAOrT,MAChCwT,EAAgBvU,EAAM2Q,OACnB6D,EAAI,EAAGA,EAAID,EAActS,OAAQuS,IAAK,CAC3C,IAAMlT,EAAOiT,EAAcC,GACvBlT,EAAKpB,KAAOmU,IACZ/S,EAAKP,MAAQuT,EAErB,CACAtU,EAAMyU,gBAAkBzU,EAAMyU,eAAeF,EACjD,CACAvU,EAAMyB,UAAYzB,EAAMyB,SAASqR,EAAK4B,iBAC1C,MAAK,kBAAAzR,OAnCc2M,EAAO1P,IAqCtC,CAkCmByU,CAAarT,EAAMgS,GAC9B,IAAK,eACD,OAlCc,SAAC1D,EAAmC0D,GAC1D,IACMsB,GAD0BhF,EAAO7O,OAAS,IACdiE,KAAI,SAAA1D,GAAI,OAAKA,EAAKP,KAAK,IACzD,OAAOc,EAAAA,EAAAA,KAACgR,GAAAA,EAAAA,MAAS5M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEb8E,MAAO6E,EAAO7E,MACdwI,KAAM3D,EAAO1P,GACbsT,MAAO,CACH,CACIC,UAAU,EACVjI,QAAQ,GAADvI,OAAK4F,EAAE,uBAAM5F,OAAG2M,EAAO7E,SAGtC2I,aAAc9D,EAAO5E,aACrB1H,MAAO,CAAEqQ,aAAc,IACnBL,GAAS,IAAAxR,UAEbD,EAAAA,EAAAA,KAAC9B,EAAAA,EAAW,CACRqB,mBAAiB,EACjBK,SAAU,WACNzB,EAAMyB,UAAYzB,EAAMyB,SAASqR,EAAK4B,iBAC1C,EACAjU,QAASmU,EAAmBrR,MAAO,YAAW,kBAAAN,OAlB3B2M,EAAO1P,IAoBtC,CAUmB2U,CAAkBvT,EAAMgS,GACnC,QACI,OAAO,KAEnB,EAEA,OACIzR,EAAAA,EAAAA,KAAA,OAAKM,UAAU,kCAAiCL,UAC5CI,EAAAA,EAAAA,MAAC2Q,GAAAA,EAAI,CAACC,KAAMA,EAAMgC,WAAW,EAAMhT,SAAA,CAE3BwO,QAAQC,IAAI,eAAgBvQ,EAAM2Q,QAGlC3Q,EAAM2Q,OAAO3L,KAAI,SAAC8P,GACd,OAAOzB,EAAuByB,EAClC,QAKpB,IAEA,MChIMC,IAFWC,EAAAA,EAAAA,IAAY,kBAEZ,WACb,OAAO7U,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAChD,GAEM2U,GAAiC,CACnC,KAAO,wnDAuDI,SAASC,KACpB,IAAAvM,GAAoBC,EAAAA,EAAAA,MAAZC,EAACF,EAADE,EAEFsM,GAFSxM,EAAJG,KAEgC,CACvCsM,MAFWL,KAGX3L,MAAM,GAADnG,OAAK4F,EAAE,sBAAM,MAClBwF,OAAQ,OACRgH,WAAW,EACXC,aAAc,GACdC,WAAY,GACZC,gBAAY/S,EACZoC,SAAS,EACT4Q,QAAS,CAAC,IAERC,EAA8C3N,KAAK4N,MAAM/N,aAAagO,QAAQ,gBAAkB7N,KAAKC,WAAS2H,EAAAA,EAAAA,GAAC,CAAC,EACjHwF,EAAsBC,MAAQD,KAE7BU,EAAqB7L,OAAO0G,QAAQgF,GAAgBjO,QAAO,SAACC,EAAkBnC,GAAA,IAAA6B,GAAAzG,EAAAA,EAAAA,GAAA4E,EAAC,GAAOxE,GAAFqG,EAAA,GAAOA,EAAA,aAAAnE,QAAAsE,EAAAA,EAAAA,GAAWG,GAAG,EAAAzB,EAAAA,EAAAA,GAAA,GAAOlF,IAAK,GAAM,IAEjIR,GAAmCC,EAAAA,EAAAA,UAAiBqV,EAAmB,GAAGT,OAAM1U,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzEuV,EAASpV,EAAA,GAAEqV,EAAarV,EAAA,GACzBsV,GAAe/G,EAAAA,EAAAA,QAAO6G,GACtBG,EAAe,SAAC3P,GAClB0P,EAAa7G,QAAU7I,EACvByP,EAAczP,EAClB,EAEAxF,GAAuCN,EAAAA,EAAAA,UAAuBkV,GAAe1U,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAtEoV,EAAWlV,EAAA,GAAEmV,EAAenV,EAAA,GAC7BoV,GAAiBnH,EAAAA,EAAAA,QAAOiH,GACxBG,EAAiB,SAAC/P,GACpB8P,EAAejH,QAAU7I,EACzB6P,EAAgB7P,EACpB,EAEAG,GAAyCjG,EAAAA,EAAAA,UAAsC,IAAGkG,GAAA/F,EAAAA,EAAAA,GAAA8F,EAAA,GAA3E6P,EAAY5P,EAAA,GAAE6P,EAAgB7P,EAAA,GAC/B8P,GAAkBvH,EAAAA,EAAAA,QAAOqH,GACzBG,EAAkB,SAACnQ,GACrBkQ,EAAgBrH,QAAU7I,EAC1BiQ,EAAiBjQ,EACrB,EAEMoQ,EAAe1M,OAAO0G,QAAQwF,GAAazO,QAAO,SAACC,EAAkBiP,GAAA,IAAAC,GAAAjW,EAAAA,EAAAA,GAAAgW,EAAC,GAAO5V,GAAF6V,EAAA,GAAOA,EAAA,aAAA3T,QAAAsE,EAAAA,EAAAA,GAAWG,GAAG,EAAAzB,EAAAA,EAAAA,GAAA,GAAOlF,IAAK,GAAM,IACxH8F,GAA0BrG,EAAAA,EAAAA,UAASkW,GAAa3P,GAAApG,EAAAA,EAAAA,GAAAkG,EAAA,GAAzCgQ,EAAK9P,EAAA,GAAE+P,EAAQ/P,EAAA,GAChBgQ,GAAc9H,EAAAA,EAAAA,QAAO4G,EAAmB5T,QAE9CuG,IAAwChI,EAAAA,EAAAA,UAAgB,IAAGkI,IAAA/H,EAAAA,EAAAA,GAAA6H,GAAA,GAAtCwO,IAAFtO,GAAA,GAAiBA,GAAA,IACpCuO,IAAgCzW,EAAAA,EAAAA,UAAgB,IAAG0W,IAAAvW,EAAAA,EAAAA,GAAAsW,GAAA,GAAlCE,IAAFD,GAAA,GAAaA,GAAA,IAEtBE,IAA+BnI,EAAAA,EAAAA,QAAO,MAEtCoI,GAAiB,SAACC,EAAiCzH,GAErD,IAAM0H,GAAuBtR,EAAAA,EAAAA,GAAA,GACtBmQ,EAAejH,SAElBqI,EAAiB,CAAC,EAElBF,EAAa7B,UACb+B,EAAiB,CACb/B,SAAOxP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAmQ,EAAejH,QAAQ2G,GAAWL,SAClC6B,EAAa7B,WAK5B8B,EAAU1H,GAAOiG,IAAU7P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBsR,EAAU1H,GAAOiG,IACjBwB,GACAE,GAGP5P,aAAaC,QAAQ,cAAeE,KAAKC,UAAUuP,IACnDnB,EAAejH,QAAUoI,EACzBlB,EAAekB,EACnB,GAEArW,EAAAA,EAAAA,YAAU,WACNqM,IAAoByC,MAAK,SAAAtG,GACrB,IAAMiH,EAASjH,EAAIpD,KAAKkJ,OACxBiH,EAAgB9F,EACpB,GACJ,GAAG,KAEHzP,EAAAA,EAAAA,YAAU,WACN,IAKcuW,EALRC,EAAYC,SAASC,eAAe,cACtCF,KAIUD,EAHLC,GAIDG,YAAc,SAAUjU,GACxB,IAAIkU,EAAM,GACNC,EAASnU,EAAEoU,QACXC,EAASrU,EAAEsU,QACX3U,EAAQkU,EAAIU,YACZtS,EAAS4R,EAAIW,aACbC,EAAOZ,EAAIa,WACXC,EAAMd,EAAIe,UAkCd,OAhCIT,EAASM,EAAO9U,EAAQ,GACxBuU,EAAM,QACCC,EAASM,EAAO,KACvBP,EAAM,QAENG,EAASM,EAAM1S,EAAS,GACxBiS,EAAM,OACCG,EAASM,EAAM,KACtBT,EAAM,OAGVH,SAASc,YAAc,SAAU7U,GAC7B,OAAQkU,GACJ,IAAK,QACDL,EAAInU,MAAa,MAAIC,GAASK,EAAEoU,QAAUD,GAAU,KACpD,MACJ,IAAK,OACDN,EAAInU,MAAa,MAAIC,GAASK,EAAEoU,QAAUD,GAAU,KACpDN,EAAInU,MAAY,KAAI+U,GAAQzU,EAAEoU,QAAUD,GAAU,KAClD,MACJ,IAAK,MACDN,EAAInU,MAAc,OAAIuC,GAAUjC,EAAEsU,QAAUD,GAAU,KACtDR,EAAInU,MAAW,IAAIiV,GAAO3U,EAAEsU,QAAUD,GAAU,KAChD,MACJ,IAAK,OACDR,EAAInU,MAAc,OAAIuC,GAAUjC,EAAEsU,QAAUD,GAAU,KAGlE,EACAR,EAAIiB,UAAY,WACZf,SAASc,YAAc,IAC3B,GACO,CACX,EAER,GAAG,IAEH,IAAME,GAA4B,SAAC7C,GACf9L,OAAO0G,QAAQ0F,EAAejH,QAAQ2G,IAAYrO,QAAO,SAACC,EAAkBkR,GAAA,IAAAC,GAAAlY,EAAAA,EAAAA,GAAAiY,EAAC,GAAO7X,GAAF8X,EAAA,GAAOA,EAAA,aAAA5V,QAAAsE,EAAAA,EAAAA,GAAWG,GAAG,EAAAzB,EAAAA,EAAAA,GAAA,GAAOlF,IAAK,GAAM,IACjIuI,SAAQ,SAAAwP,GACZC,cAAcD,EAAItD,WACtB,IACwBxL,OAAO0G,QAAQ0F,EAAejH,QAAQ2G,GAAWL,SAAShO,QAAO,SAACC,EAAsBsR,GAAA,IAAAC,GAAAtY,EAAAA,EAAAA,GAAAqY,EAAC,GAAOjY,GAAFkY,EAAA,GAAOA,EAAA,aAAAhW,QAAAsE,EAAAA,EAAAA,GAAWG,GAAG,EAAAzB,EAAAA,EAAAA,GAAA,GAAOlF,IAAK,GAAM,IAC7IuI,SAAQ,SAAA4P,GACpBH,cAAcG,EAAK5W,MACvB,GACJ,EAEM6W,GAAiB,SAACrD,EAAmBsD,GACvC,IACMF,EADU9C,EAAejH,QAAQ2G,GAAWL,QAC7B2D,GACjBF,GACAH,cAAcG,EAAK5W,MAE3B,GAGApB,EAAAA,EAAAA,YAAU,WAKN,OAJAmW,GAAe,CACXxS,SAAS,IAGN,WACHmF,OAAO0G,QAAQwF,GAAa5M,SAAQ,SAAChI,GACjC,IAAOuO,GAAPlP,EAAAA,EAAAA,GAAcW,EAAI,GAAR,GACVqX,GAA0B9I,EAC9B,GACJ,CACJ,GAAG,KAEH3O,EAAAA,EAAAA,YAAU,WAEN,IAAMmY,EAAqBnD,EAAYJ,GACf9L,OAAO0G,QAAQ2I,EAAmB5D,SAAShO,QAAO,SAACC,EAAsB4R,GAAA,IAAAC,GAAA5Y,EAAAA,EAAAA,GAAA2Y,EAAC,GAAOvY,GAAFwY,EAAA,GAAOA,EAAA,aAAAtW,QAAAsE,EAAAA,EAAAA,GAAWG,GAAG,EAAAzB,EAAAA,EAAAA,GAAA,GAAOlF,IAAK,GAAM,IAC9HuI,SAAQ,SAAA4P,GACA,YAAhBA,EAAK7K,QACLmL,GAAWN,EAAKrI,MAExB,GACJ,GAAG,CAACiF,IAGJ,IA+EM2D,GAAY,SAACvM,GACfD,EAAuBC,GAAS8C,MAAK,SAAAtG,GACjC,IAAAgQ,EAAqEhQ,EAAIpD,KAAjEqT,EAAKD,EAALC,MAAOnK,EAAMkK,EAANlK,OAAQoK,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAaJ,EAAbI,cAAeC,EAAKL,EAALK,MACrDb,GAAqBjT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBmQ,EAAejH,QAAQ2G,GAAWL,QAAQvI,IAAQ,IACrDmB,OAAQsL,EACR3L,KAAM+L,EACNxJ,IAAKuJ,EACLE,YAAaH,EACbrK,OAAAA,EACAhE,QAASoO,IAEb,GAAc,YAAVD,GAAiC,YAAVA,EAAqB,CAC5C,IAAMM,EAAW,IAAIC,KAAKhB,EAAKrH,WAAa,IAAIsI,UAC1CC,GAAU,IAAIF,MAAOC,UACrBrI,GAAWuI,EAAAA,EAAAA,KAAWD,EAAUH,GAAY,KAClDf,EAAKpH,SAAWA,EAEhBuF,GAAe,CACXhJ,OAAQ,UACRoH,SAAO9F,EAAAA,EAAAA,GAAA,GACFzC,EAAUgM,KAGnBC,GAAerD,EAAW5I,EAC9B,MACImK,GAAe,CACXhJ,OAAQ,UACRoH,SAAO9F,EAAAA,EAAAA,GAAA,GACFzC,EAAUgM,IAI3B,IAAG9I,OAAM,WACL+I,GAAerD,EAAW5I,GAC1B1B,EAAAA,GAAAA,MAAc3C,EAAE,mFAChBwO,GAAe,CACXhJ,OAAQ,UACRoH,SAAO9F,EAAAA,EAAAA,GAAA,GACFzC,GAAOjH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDmQ,EAAejH,QAAQ2G,GAAWL,QAAQvI,IAAQ,IACrDmB,OAAQ,UACRL,KAAM,UAItB,GACJ,EAEMwL,GAAa,SAACtM,GAChBiM,GAAerD,EAAW5I,GAE1B,IAAI5K,EAAQgY,aAAY,WACpBb,GAAUvM,EACd,GAAG,KAEHmK,GAAe,CACX5B,SAAO9F,EAAAA,EAAAA,GAAA,GACFzC,EAAU,CACP2D,MAAO3D,EACPmB,OAAQ,OACRsD,QAASuE,EAAYJ,GAAWnE,QAChC4B,KAAK,GAADtQ,OAAK4F,EAAE,iBAAK5F,OAAGiK,GACnBc,KAAM,QACN6D,UAAW0I,MAASC,OAAO,uBAC3BjI,SAAU2D,EAAYJ,GAAWvD,SACjCC,MAAO0D,EAAYJ,GAAWtD,MAC9BlQ,MAAAA,EACAkJ,QAAS,OAIrBiO,GAAUvM,EACd,EA+BA,OACIrL,EAAAA,EAAAA,KAAA,OAAKM,UAAU,mCAAkCL,UAC7CD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,mBAAkBL,UAC7BD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAI,CAACD,KAAK,gBAAgB1J,SA1LtB,SAACgZ,GACdzQ,OAAO0G,QAAQwF,GAAa5M,SAAQ,SAAChI,GACjC,IAAOuO,GAAPlP,EAAAA,EAAAA,GAAcW,EAAI,GAAR,GACNuO,IAAQ4K,GACR9B,GAA0B9I,EAElC,IACAmH,GAAgB,IAChBG,GAAY,IACZlB,EAAawE,EACjB,EAgL2D3E,UAAWA,EAAW4E,OAnHlE,SAACC,EAAgBC,GACb,QAAXA,EA5DI,WACRjC,GAA0B7C,GAE1B,IAAM+E,IAAiB9D,EAAY5H,QACnC,GAAI0L,EAAe,GACfrP,EAAAA,GAAAA,KAAa3C,EAAE,yDACZ,CACH,IAAM4R,EAAe1F,KACf3L,EAAK,GAAAnG,OAAM4F,EAAE,sBAAM,KAAA5F,OAAI4X,GACvBC,GAAQvT,EAAAA,EAAAA,GAAOsP,GACfkE,EAAyB,CAC3B3R,MAAAA,EACAgM,MAAOqF,EACPpM,OAAQ,OACRgH,WAAW,EACXC,aAAc,GACdE,gBAAY/S,EACZ8S,WAAY,GACZ1Q,SAAS,EACT4Q,QAAS,CAAC,GAEdqF,EAASnR,KAAKoR,GACdjE,EAASgE,GACT7E,EAAawE,GAEb,IAAI/Q,GAAiBzD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdiQ,GAAW,IAAAvG,EAAAA,EAAAA,GAAA,GAAG8K,EAAeM,IAGpC1E,EAAe3M,GACf9B,aAAaC,QAAQ,cAAeE,KAAKC,UAAU0B,GACvD,CACJ,CA6BQsR,GA3BO,SAACL,GACZ,IAAIF,EAAe3E,EACfmF,GAAa,EACjBpE,EAAMvN,SAAQ,SAAC4R,EAAM1G,GACb0G,EAAK9F,QAAUuF,IACfM,EAAYzG,EAAI,EAExB,IACA,IAAMsG,EAAWjE,EAAMxV,QAAO,SAAA6Z,GAAI,OAAIA,EAAK9F,QAAUuF,CAAS,IAC1DG,EAAS7Y,QAAUwY,IAAiBE,IAEhCF,EADAQ,GAAa,EACEH,EAASG,GAAW7F,MAEpB0F,EAAS,GAAG1F,OAGnC0B,EAASgE,GACT7E,EAAawE,GAEb,IAAI/Q,GAAGzD,EAAAA,EAAAA,GAAA,GAAQiQ,UACRxM,EAAIiR,GACXtE,EAAe3M,GACf9B,aAAaC,QAAQ,cAAeE,KAAKC,UAAU0B,GACvD,CAMQyR,CAAOR,EAEf,EA6GgG7Y,SAC/E+U,EAAM7R,KAAI,SAACkW,EAAMtZ,GAAK,IAAAwZ,EAAAC,EAAA,OACnBxZ,EAAAA,EAAAA,KAACuJ,EAAAA,EAAAA,QAAY,CAACC,IAAG,GAAApI,OAAK4F,EAAE,sBAAM,KAAA5F,OAAIrB,EAAQ,GAAsB0Z,SAAoB,IAAV1Z,EAAYE,UAClFI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeL,SAAA,EAC1BI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeL,SAAA,CAEA,QAAtBsZ,EAAAlF,EAAYJ,UAAU,IAAAsF,GAAtBA,EAAwBvW,SAAUhD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,gBAAeL,UAC5DI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBL,SAAA,EAC3BD,EAAAA,EAAAA,KAAC0Z,EAAAA,EAAW,KACZ1Z,EAAAA,EAAAA,KAAA,OAAAC,SACK+G,EAAE,yCAGN,MAGbhH,EAAAA,EAAAA,KAAC2L,EAAQ,CACLzM,MAA6B,QAAxBsa,EAAEnF,EAAYJ,UAAU,IAAAuF,OAAA,EAAtBA,EAAwB1J,QAC/BlQ,SAAU,SAACV,GACPsW,GAAe,CACX1F,QAAmB,KAAV5Q,OAAe0B,EAAY1B,EACpCqI,MAAO8R,EAAK9R,OAEpB,QAGRlH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAOjC,GAAG,UAAUoD,MAAO,CAAEuC,OAAQ,KAAM/D,SAAA,EACtDD,EAAAA,EAAAA,KAAC2Z,IAAS,CACNC,KAAK,IACLC,QAAS,WAAQ,EACjBC,OAAQ,SAAC/X,GACL,IAAMgY,EAAajE,SAASC,eAAe,WAC3C,GAAIgE,EAAY,CACZ,IAAMlS,EAAMiO,SAASkE,KAAKnX,aAAed,EAAEkY,EAC3CF,EAAWtY,MAAMuC,OAAM,GAAA5C,OAAMyG,EAAG,KACpC,CACJ,EACAqS,OAAQ,WAAQ,EAAEja,UAClBD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAOmB,MAAO,CAAEmI,OAAQ,aAAc3J,UAACD,EAAAA,EAAAA,KAACma,EAAAA,EAAY,SAEvE9Z,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDL,SAAA,EAC3DI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQL,SAAA,EACnBD,EAAAA,EAAAA,KAACoa,EAAAA,EAAM,CAAC9Z,UAAU,MACd+Z,QAAShG,EAAYJ,GAAWT,UAChC8G,kBAAmBtT,EAAE,4BACrBuT,gBAAiBvT,EAAE,4BAASpH,SAAU,SAACya,GACnC7E,GAAe,CAAEhC,UAAW6G,GAChC,IAEAhG,EAAYJ,GAAWT,WAAYxT,EAAAA,EAAAA,KAAC9B,EAAAA,EAAW,CAC3CgB,MAAOmV,EAAYJ,GAAWR,aAC9BlU,mBAAiB,EACjBK,SAAU,SAACV,GACPsW,GAAe,CACX/B,aAAcvU,GAEtB,EACAmD,SAAU,SAACnD,GACPsW,GAAe,CACX9B,WAAYN,GAAOlU,GACnB8D,SAAS,IAGb,IAAMvC,EAAQgY,aAAY,WACtB,IAAM+B,EAAiBjG,EAAejH,QAAQ2G,GAAWnE,SAAW,GACpE,GAAIyE,EAAejH,QAAQ2G,GAAWP,WAAY,CAC9C,IAAIA,EAAaa,EAAejH,QAAQ2G,GAAWP,YAAc,GAC3D+G,EAAS/G,EAAWgH,OAAO,EAAG,IACpChH,EAAaA,EAAWiH,QAAQF,EAAQ,IAExCjF,GAAe,CACX9B,WAAAA,EACA5D,QAAS0K,EAAiBC,GAElC,MACIvD,cAAc3C,EAAejH,QAAQ2G,GAAWN,YAChD6B,GAAe,CACX9B,WAAY,GACZC,gBAAY/S,EACZoC,SAAS,GAGrB,GAAG,KAEHwS,GAAe,CACX7B,WAAYlT,GAEpB,EACA7B,QAAS,CACL,QACDiD,YAAamF,EAAE,8BAAWtF,MAAO,UAAc,SAG9DrB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQL,SAAA,EACnBD,EAAAA,EAAAA,KAAC6Q,GAAc,CACXtO,IAAKgT,GACLhE,UAAW8C,EAAYJ,GACvBrU,SAAU,SAAC2R,GACPiE,GAAejE,EACnB,EACAqB,eAAgB,SAAC9D,GACb8F,EAAgB9F,GAChB0G,GAAe,CACX9E,SAAU,MAElB,EACA5B,OAAQ6F,EAAgBrH,WAC5BjN,EAAAA,EAAAA,MAACgJ,EAAAA,EAAM,CAAC/I,UAAU,OAAOgJ,KAAK,UAAUtG,QAA2C,YAAlCqR,EAAYJ,GAAWzH,OAAsBnJ,QAAS,WACnGkS,GAAwBjI,QAAQ6D,WAAWhD,MAAK,SAACtG,IA5I7E,WAAO,IAAD+S,EAClBpF,GAAe,CAAEhJ,OAAQ,YACzB,IAAMqO,EAAepG,EAAatR,KAAI,SAAA1D,GAAI,OAAIA,EAAKpB,EAAE,IAAEuH,QAAO,SAACC,EAAUC,GAAS,OAAA1B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWyB,GAAG,IAAAiI,EAAAA,EAAAA,GAAA,GAAGhI,EAAOuO,EAAYJ,GAAWnO,IAAK,GAAK,CAAC,GAE5ImF,GAAS7G,EAAAA,EAAAA,GAAC,CACN6H,KAA2B,QAAtB2O,EAAAvG,EAAYJ,UAAU,IAAA2G,OAAA,EAAtBA,EAAwB9K,UAAW,IACrC+K,IACJ1M,MAAK,SAAAtG,GACJ,IAAAiT,EAA6BjT,EAAIpD,KAAzBsT,EAAO+C,EAAP/C,QAAS1M,EAAOyP,EAAPzP,QACb0M,GACAvC,GAAe,CACXhJ,OAAQ,YAEZhE,EAAAA,EAAAA,MAAY,CACRjB,MAAOP,EAAE,4BACTuI,MAAMvP,EAAAA,EAAAA,KAAC+a,EAAAA,EAAyB,IAChCrZ,MAAO,IACPoO,QAASiI,EACTlI,OAAQ7I,EAAE,mBAGPqE,GACPsM,GAAWtM,EAEnB,IAAGkD,OAAM,SAAAC,GACLgH,GAAe,CAAEhJ,OAAQ,WAC7B,GACJ,CAkHgDwO,EACJ,GACJ,EAAE/a,SAAA,CAAE+G,EAAE,iBAAMhH,EAAAA,EAAAA,KAACib,EAAAA,EAAmB,cAGxC5a,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAoCmB,MAAO,CAAEuC,OAAQ,qBAAsB/D,SAAA,EACtFD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,MAAKL,UAChBD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,oCAAmCL,SAC7C+G,EAAE,qBAGXhH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWL,UACtBD,EAAAA,EAAAA,KAAC6M,EAAQ,CACLiC,OAAQuF,EAAYJ,GAAWL,QAC/B1E,SAAU,SAAC7Q,GACPmK,EAAAA,EAAAA,QAAc,CACVjB,MAAOP,EAAE,gBACTuI,MAAMvP,EAAAA,EAAAA,KAAC+a,EAAAA,EAAyB,IAChCjL,QAAQ,GAAD1O,OAAK4F,EAAE,4BAAO,KACrB6I,OAAQ7I,EAAE,4BACVoJ,WAAYpJ,EAAE,gBACdkU,cAAe,CAAEC,QAAQ,GACzBjL,KAAI,WACA,IAAI0D,EAAUS,EAAYJ,GAAWL,QACrC0D,GAAerD,EAAW5V,UACnBuV,EAAQvV,GACfmX,GAAe,CACX5B,QAAAA,GAER,EACA9K,SAAQ,WAAK,GAErB,EACAsG,QAAS,SAAC/Q,GACNsZ,GAAWtZ,EACf,gBA9I4Bgb,EAAK9F,MAoJ1C,SAMvC,C","sources":["components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","api/dataSearchApi.ts","components/CodeEdit.tsx","pages/DataSearch/TaskList.tsx","pages/DataSearch/ConfigFormData.tsx","pages/DataSearch/DataSearch.tsx"],"sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\n// import ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\nimport { useTranslation } from 'react-i18next';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst customizeRenderEmpty = () => (\n\t\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t\t<div>{t('暂无数据')}</div>\n\t\t</Row>\n\t);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== t('操作'));\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\t// const handleClickOutputExcel = () => {\n\t// \tconst option: any = {};\n\t// \toption.fileName = 'result';\n\t// \toption.datas = [\n\t// \t\t{\n\t// \t\t\tsheetData: dataFormat.data,\n\t// \t\t\tsheetName: 'sheet',\n\t// \t\t\tsheetHeader: dataFormat.header,\n\t// \t\t},\n\t// \t];\n\t// \tconst toExcel = new ExportJsonExcel(option);\n\t// \ttoExcel.saveExcel();\n\t// };\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={t('导出数据')}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">{t('选择需要导出的列')}：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('全选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('反选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t{/* <Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane> */}\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t{t('导出数据')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import { AxiosResponse } from 'axios'\nimport axios, { AxiosResFormat } from '.'\nimport { TTaskStatus } from '../pages/DataSearch/interface'\n\nexport const actionRun = (params: {\n    sql: string,\n    [key: string]: any\n}): Promise<AxiosResponse<{\n    err_msg: string\n    log_url: string\n    task_id: string\n    task_url: string\n}>> => {\n    return axios.post('/idex/submit_task', params)\n}\n\nexport const actionGetDataSearchRes = (task_id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n    state: TTaskStatus\n    task_url: string\n    result_url: string\n    stage: any\n    spark_log_url: string\n    spark_ui_url: string\n}>> => {\n    return axios.get(`/idex/look/${task_id}`,)\n}\n\nexport const getIdexDBList = (): Promise<AxiosResponse<{\n    dbs: string[]\n}>> => {\n    return axios.get(`/idex/get_user_db`)\n}\n\nexport const getIdexTableList = (table: string): Promise<AxiosResponse<{\n    tables: string[]\n}>> => {\n    return axios.get(`/idex/get_user_db_tables/${table}`)\n}\n\nexport const getIdexTaskDownloadUrl = (id: string, separator: string): Promise<AxiosResponse<{\n    download_url: string\n}>> => {\n    return axios.get(`/idex/download_url/${id}`, {\n        params: {\n            separator\n        }\n    })\n}\n\nexport const getIdexTaskResult = (id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n}>> => {\n    return axios.get(`/idex/result/${id}`)\n}\n\nexport const stopIndxTask = (id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n}>> => {\n    return axios.get(`/idex/stop/${id}`)\n}\n\n\nexport const getIndexResourceOverview = (group_id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n}>> => {\n    return axios.get(`/idex/get_resource/${group_id}`)\n}\n\nexport interface IIdexFormConfigItem {\n    id: string,\n    label: string,\n    type: 'input' | 'select' | 'input-select',\n    value: IIdexFormConfigOption[]\n    defaultValue: string\n    multiple: boolean\n    disable: boolean\n    placeHolder: string\n}\n\nexport interface IIdexFormConfigOption {\n    label: string\n    value: string\n    relate: {\n        relateId: string\n        value: IIdexFormConfigOption[]\n    }\n}\n\nexport const getIdexFormConfig = (): Promise<AxiosResponse<{\n    result: IIdexFormConfigItem[]\n}>> => {\n    return axios.get(`/idex/config`)\n}","import React from 'react';\nimport CodeMirror, { ReactCodeMirrorProps } from '@uiw/react-codemirror';\nimport { bbedit } from '@uiw/codemirror-theme-bbedit';\nimport { zebraStripes } from '@uiw/codemirror-extensions-zebra-stripes';\nimport { sql } from '@codemirror/lang-sql';\n\ninterface IProps extends ReactCodeMirrorProps {\n\n}\n\nconst sqlLang = `CREATE TABLE dbo.EmployeePhoto\n(\n    EmployeeId INT NOT NULL PRIMARY KEY,\n    Photo VARBINARY(MAX) FILESTREAM NULL,\n    MyRowGuidColumn UNIQUEIDENTIFIER NOT NULL ROWGUIDCOL\n                    UNIQUE DEFAULT NEWID()\n);\n\nGO\n\n/*\ntext_of_comment\n/* nested comment */\n*/\n\n-- line comment\n\nCREATE NONCLUSTERED INDEX IX_WorkOrder_ProductID\n    ON Production.WorkOrder(ProductID)\n    WITH (FILLFACTOR = 80,\n        PAD_INDEX = ON,\n        DROP_EXISTING = ON);\nGO\n\nWHILE (SELECT AVG(ListPrice) FROM Production.Product) < $300\nBEGIN\n   UPDATE Production.Product\n      SET ListPrice = ListPrice * 2\n   SELECT MAX(ListPrice) FROM Production.Product\n   IF (SELECT MAX(ListPrice) FROM Production.Product) > $500\n      BREAK\n   ELSE\n      CONTINUE\nEND\nPRINT 'Too much for the market to bear';\n\nMERGE INTO Sales.SalesReason AS [Target]\nUSING (VALUES ('Recommendation','Other'), ('Review', 'Marketing'), ('Internet', 'Promotion'))\n       AS [Source] ([NewName], NewReasonType)\nON [Target].[Name] = [Source].[NewName]\nWHEN MATCHED\nTHEN UPDATE SET ReasonType = [Source].NewReasonType\nWHEN NOT MATCHED BY TARGET\nTHEN INSERT ([Name], ReasonType) VALUES ([NewName], NewReasonType)\nOUTPUT $action INTO @SummaryOfChanges;\n\nSELECT ProductID, OrderQty, SUM(LineTotal) AS Total\nFROM Sales.SalesOrderDetail\nWHERE UnitPrice < $5.00\nGROUP BY ProductID, OrderQty\nORDER BY ProductID, OrderQty\nOPTION (HASH GROUP, FAST 10);\n`;\n\n// https://uiwjs.github.io/react-codemirror/\n// https://www.npmjs.com/package/@uiw/react-codemirror\n// https://github.com/uiwjs/react-codemirror\nexport default function CodeEdit(props: IProps) {\n  return (\n    <>\n      <CodeMirror\n        theme={bbedit}\n        value={props.value}\n        onChange={props.onChange}\n        extensions={[\n          sql(),\n          zebraStripes({\n            step: 2,\n            lightColor: '#fafafa',\n            darkColor: '#fafafa',\n          })]} />\n    </>\n  )\n}\n\n// import React, { useEffect, useState } from 'react';\n// import { Controlled as CodeMirror } from 'react-codemirror2';\n// // 主题\n// import 'codemirror/lib/codemirror.css';\n// import 'codemirror/theme/solarized.css';\n// // 代码模式\n// import 'codemirror/mode/sql/sql';\n// // 代码补全\n// import 'codemirror/addon/hint/show-hint.css'\n// import 'codemirror/addon/hint/sql-hint';\n// import 'codemirror/addon/hint/show-hint';\n// import 'codemirror/addon/edit/closebrackets';\n// import 'codemirror/addon/hint/anyword-hint.js';\n// //折叠代码\n// import 'codemirror/addon/fold/foldgutter.css';\n// import 'codemirror/addon/fold/foldcode.js';\n// import 'codemirror/addon/fold/foldgutter.js';\n// import 'codemirror/addon/fold/brace-fold.js';\n// import 'codemirror/addon/fold/comment-fold.js';\n// // 代码高亮\n// import 'codemirror/addon/selection/active-line';\n\n// interface IProps {\n//   value?: string;\n//   onChange?: (value: string) => void;\n//   onSelect?: (value: string) => void\n//   readonly?: boolean\n// }\n\n// // https://github.com/scniro/react-codemirror2\n// // https://xudany.github.io/codemirror/2020/07/21/CodeMirror%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD/\n// export default function CodeEdit(props: IProps) {\n//   const [instance, setInstance] = useState<any>(null);\n\n//   return (\n//     <>\n//       <CodeMirror\n//         editorDidMount={(editor) => {\n//           setInstance(editor);\n//         }}\n//         value={props.value || ''}\n//         options={{\n//           placeholder: '输入SQL进行查询',\n//           mode: 'sql',\n//           theme: 'solarized',\n//           lineNumbers: true,\n//           smartIndent: true,\n//           lineWrapping: true,\n//           styleActiveLine: true,\n//           foldGutter: true,\n//           matchBrackets: true, //括号匹配，光标旁边的括号都高亮显示\n//           autoCloseBrackets: true, //键入时将自动关闭()[]{}''\"\"\n//           gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\n//           extraKeys: { Ctrl: 'autocomplete' },\n//           hintOptions: {\n//             completeSingle: false,\n//             alignWithWord: true\n//           },\n//         }}\n//         onCursorActivity={(editor) => {\n//           // console.log(editor.getSelection())\n//           const value = editor.getSelection()\n//           props.onSelect && props.onSelect(value)\n//         }}\n//         onBeforeChange={(editor, data, value) => {\n//           if (!props.readonly) {\n//             if (data.origin !== 'complete') {\n//               editor.execCommand('autocomplete');\n//             }\n//             props.onChange && props.onChange(value);\n//           }\n//         }}\n//       // onChange={(editor, data, value) => {\n//       //   console.log(editor, data, value)\n//       //   props.onChange && props.onChange(value);\n//       // }}\n//       />\n//     </>\n//   );\n// }","import { CaretRightOutlined, CloseCircleOutlined, CloseOutlined, DeleteOutlined, DownloadOutlined, LoadingOutlined, QuestionCircleOutlined, RedoOutlined, StopOutlined } from '@ant-design/icons';\nimport { Button, Col, Collapse, message, Modal, Row, Select, Spin, Steps, Tooltip } from 'antd'\nimport React, { useRef, useState } from 'react'\nimport TableBox from '../../components/TableBox/TableBox';\nimport { TTaskStep, IEditorTaskItem, TTaskStatus } from './interface'\nimport './DataSearch.less';\nimport { getIdexTaskDownloadUrl, getIdexTaskResult, stopIndxTask } from '../../api/dataSearchApi';\nimport { useTranslation } from 'react-i18next';\n// import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\n\nexport interface ITaskListItem { }\n\ninterface IProps {\n    onDelete: (id: string) => void,\n    onRetry: (id: string) => void,\n    option: Record<string, IEditorTaskItem>\n}\n\nconst stepMap: Record<TTaskStep, number> = {\n    'start': 0,\n    'parse': 1,\n    'execute': 2,\n    'end': 3\n}\n\nconst statusIconMap = (status: TTaskStatus) => {\n    switch (status) {\n        case 'init':\n        case 'running':\n            return <LoadingOutlined />\n        case 'failure':\n            return <CloseCircleOutlined style={{ color: '#ff4444' }} />\n        case 'stop':\n            return <QuestionCircleOutlined />\n        default:\n            return null\n    }\n}\n\nexport default function TaskList(props: IProps) {\n    const { t, i18n } = useTranslation();\n    const [visibleDownload, setVisibleDownload] = useState(false)\n    const [visibleResult, setVisibleResult] = useState(false)\n    // const [dataConfig, setDataConfig] = useState<any>([])\n    // const [dataResult, setDataResult] = useState<Record<string, any>[]>([])\n    const [loadingResult, setLoadingResult] = useState(true)\n\n    // const [dataConfig, _setDataConfig] = useState<any>([])\n    // const dataConfigRef = useRef(dataConfig);\n    // const setDataConfig = (data: any): void => {\n    //     dataConfigRef.current = data;\n    //     _setDataConfig(data);\n    // };\n\n    // const [dataResult, _setDataResult] = useState<any>([])\n    // const dataResultRef = useRef(dataResult);\n    // const setDataResult = (data: any): void => {\n    //     dataResultRef.current = data;\n    //     _setDataResult(data);\n    // };\n\n    const [separator, _setSeparator] = useState<string>('|')\n    const separatorRef = useRef(separator);\n    const setSeparator = (data: string): void => {\n        separatorRef.current = data;\n        _setSeparator(data);\n    };\n\n    const [currentReqId, _setCurrentReqId] = useState<string>('|')\n    const currentReqIdRef = useRef(currentReqId);\n    const setCurrentReqId = (data: string): void => {\n        currentReqIdRef.current = data;\n        _setCurrentReqId(data);\n    };\n\n    const onChange = (key: string | string[]) => {\n        console.log(key);\n    };\n\n    const handleResultData = (result: (string | number)[][]) => {\n        const header = result[0] || []\n        const data = result.slice(1)\n        const targetData = data.map((row) => {\n            const rowItem = row.reduce((pre, next, index) => ({ ...pre, [header[index]]: next }), {})\n            return rowItem\n        })\n        const headerConfig = header.map(item => ({\n            title: item,\n            dataIndex: item,\n            key: item,\n            width: 120,\n        }))\n        // targetData.unshift(header)\n        // setDataConfig(headerConfig)\n        // setDataResult(targetData)\n\n        return {\n            config: headerConfig,\n            data: targetData\n        }\n    }\n\n    // const handleClickDownload = (id: any) => {\n    //     Modal.confirm({\n    //         title: '下载结果',\n    //         icon: <DownloadOutlined />,\n    //         content: <div>\n    //             <div className=\"d-f ac pt16\">\n    //                 <div className=\"w72\">分隔符：</div>\n    //                 {console.log('separatorRef.current', separatorRef.current, separator)}\n    //                 <Select style={{ width: 256 }} value={separatorRef.current} options={[{\n    //                     label: '|',\n    //                     value: '|'\n    //                 }, {\n    //                     label: ',',\n    //                     value: ','\n    //                 }, {\n    //                     label: 'tab',\n    //                     value: 'tab'\n    //                 }]} onChange={(value) => {\n\n    //                     // separatorRef.current = value\n    //                     setSeparator(value)\n    //                     _setSeparator(value)\n    //                     console.log(value, separatorRef.current);\n    //                 }} />\n    //             </div>\n    //         </div>,\n    //         okText: `确认`,\n    //         cancelText: '取消',\n    //         onOk() {\n    //             return new Promise((resolve, reject) => {\n    //                 getIdexTaskDownloadUrl(id).then(res => {\n    //                     window.open(res.data.download_url, 'bank')\n    //                     resolve('')\n    //                 }).catch(err => {\n    //                     reject()\n    //                 })\n    //             })\n    //                 .then((res) => {\n    //                     message.success('下载成功');\n    //                 })\n    //                 .catch(() => {\n    //                     message.error('下载失败');\n    //                 });\n    //         },\n    //         onCancel() { },\n    //     });\n    // }\n\n    return (\n        <div>\n            {/* <Modal\n                title={`下载结果`}\n                visible={visibleResult}\n                footer={null}\n                width={1248}\n                destroyOnClose\n                onCancel={() => {\n                    setVisibleResult(false)\n                }}>\n                <Spin spinning={loadingResult}>\n                    <Spreadsheet height={700} width={1200} dataSource={dataResult} />\n                </Spin>\n            </Modal> */}\n\n            <Modal\n                title={t('结果')}\n                visible={visibleDownload}\n                footer={null}\n                destroyOnClose\n                onCancel={() => {\n                    setSeparator('|')\n                    setVisibleDownload(false)\n                }}>\n                <div>\n                    <div className=\"d-f ac pt8\">\n                        <div className=\"w96\">{t('选择分隔符')}：</div>\n                        <Select style={{ width: 256 }} value={separatorRef.current} options={[{\n                            label: '|',\n                            value: '|'\n                        }, {\n                            label: ',',\n                            value: ','\n                        }, {\n                            label: 'TAB',\n                            value: 'TAB'\n                        }]} onChange={(value) => {\n                            setSeparator(value)\n                        }} />\n                    </div>\n                    <div className=\"ta-r pt16\">\n                        <Button type=\"primary\" onClick={() => {\n                            getIdexTaskDownloadUrl(currentReqIdRef.current, separatorRef.current).then(res => {\n                                window.open(res.data.download_url, 'bank')\n                            }).catch(err => {\n                                console.log(err)\n                            })\n                        }}>{t('下载')}</Button>\n                    </div>\n                </div>\n            </Modal>\n            <Collapse className=\"site-collapse-custom-collapse\" defaultActiveKey={['task_0']} onChange={onChange}>\n                {\n                    (Object.entries(props.option).reduce((pre: IEditorTaskItem[], [key, value]) => ([...pre, value]), []) || []).reverse().filter(item => !!item.reqId).map((item, index) => {\n                        return (\n                            <Collapse.Panel className={['site-collapse-custom-panel', `status-${item.status}`].join(' ')} header={`${t('子任务')}${item.reqId}`} key={`task_${index}`} extra={\n                                <>\n                                    <Button className=\"mr16\" type=\"default\" size='small' onClick={(e) => {\n                                        e.stopPropagation();\n                                        props.onDelete(item.reqId)\n                                    }}>{t('删除')}<DeleteOutlined /></Button>\n                                    <Button type=\"primary\" size='small' onClick={(e) => {\n                                        e.stopPropagation();\n                                        props.onRetry(item.reqId)\n                                    }}\n                                    >{t('重试')}<RedoOutlined /></Button>\n                                </>\n                            }>\n                                <Steps size=\"small\" current={stepMap[item.step]}>\n                                    <Steps.Step title={t('准备开始')} icon={stepMap[item.step] === 0 ? statusIconMap(item.status) : null} />\n                                    <Steps.Step title={t('解析')} icon={stepMap[item.step] === 1 ? statusIconMap(item.status) : null} />\n                                    <Steps.Step title={t('执行')} icon={stepMap[item.step] === 2 ? statusIconMap(item.status) : null} />\n                                    <Steps.Step title={t('输出结果')} icon={stepMap[item.step] === 3 ? statusIconMap(item.status) : null} />\n                                </Steps>\n                                <TableBox\n                                    size={\"small\"}\n                                    loading={false}\n                                    cancelExportData={true}\n                                    rowKey={(record: any) => {\n                                        return JSON.stringify(record)\n                                    }}\n                                    columns={[{\n                                        title: t('子任务'),\n                                        dataIndex: 'content',\n                                        key: 'content',\n                                        render: (text: any) => {\n                                            return <Tooltip\n                                                placement=\"top\"\n                                                title={text}\n                                            >\n                                                <div className=\"ellip1 w256\">{text}</div>\n                                            </Tooltip>\n                                        }\n                                    },\n                                    // {\n                                    //     title: '数据库',\n                                    //     dataIndex: 'database',\n                                    //     key: 'database',\n                                    // }, {\n                                    //     title: '表',\n                                    //     dataIndex: 'table',\n                                    //     key: 'table',\n                                    // },\n                                    {\n                                        title: t('开始时间'),\n                                        dataIndex: 'startime',\n                                        key: 'startime',\n                                    }, {\n                                        title: t('运行时长'),\n                                        dataIndex: 'duration',\n                                        key: 'duration',\n                                    }, {\n                                        title: t('状态'),\n                                        dataIndex: 'status',\n                                        key: 'status',\n                                        render: (text: any) => {\n                                            return <span className={[`c-${item.status}`].join(' ')}>{text}</span>\n                                        }\n                                    }, {\n                                        title: t('操作'),\n                                        dataIndex: 'action',\n                                        key: 'action',\n                                        render: () => {\n                                            return <>\n                                                <span className=\"link mr16\" onClick={() => {\n                                                    // setVisibleDetail(true)\n                                                    Modal.info({\n                                                        title: t('任务详情'),\n                                                        width: 600,\n                                                        okText: t('关闭'),\n                                                        content: (\n                                                            <div>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('开始时间')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.startTime}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('运行时长')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.duration}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('状态')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.status}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('子任务内容')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.content}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('任务信息')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.message}</Col>\n                                                                </Row>\n                                                            </div>\n                                                        ),\n                                                        onOk() { },\n                                                    });\n                                                }}>{t('详情')}</span>\n                                                {\n                                                    !(item.step === 'end' && item.status === 'success') ? <span className=\"link mr16\" onClick={() => {\n                                                        Modal.confirm({\n                                                            title: t('终止任务'),\n                                                            icon: <StopOutlined />,\n                                                            content: '',\n                                                            okText: t('确认'),\n                                                            cancelText: t('取消'),\n                                                            onOk() {\n                                                                return new Promise((resolve, reject) => {\n                                                                    stopIndxTask(item.reqId).then(res => {\n                                                                        resolve('')\n                                                                    }).catch(err => {\n                                                                        reject()\n                                                                    })\n                                                                })\n                                                                    .then((res) => {\n                                                                        message.success(t('终止成功'));\n                                                                    })\n                                                                    .catch(() => {\n                                                                        message.error(t('终止失败'));\n                                                                    });\n                                                            },\n                                                            onCancel() { },\n                                                        });\n                                                    }}>{t('终止')}</span> : null\n                                                }\n                                                {\n                                                    !!item.log ? <span className=\"link mr16\" onClick={() => {\n                                                        window.open(item.log, 'bank')\n                                                    }}>{t('日志')}</span> : null\n                                                }\n                                                {\n                                                    item.step === 'end' && item.status === 'success' ? <span className=\"link mr16\" onClick={() => {\n                                                        setLoadingResult(true)\n                                                        getIdexTaskResult(item.reqId).then(res => {\n                                                            setVisibleResult(true)\n                                                            const result = res.data.result\n                                                            handleResultData(result)\n                                                            const handleData = handleResultData(result)\n                                                            // setDataResult(handleData)\n                                                            Modal.info({\n                                                                title: t('结果查看'),\n                                                                content: (\n                                                                    <div>\n                                                                        {/* {(result || [])?.map(item => {\n                                                                            return <div>{item}</div>\n                                                                        })} */}\n                                                                        <TableBox\n\n                                                                            size={\"small\"}\n                                                                            loading={false}\n                                                                            cancelExportData={true}\n                                                                            rowKey={(record: any) => {\n                                                                                return JSON.stringify(record)\n                                                                            }}\n                                                                            columns={handleData.config}\n                                                                            pagination={false}\n                                                                            dataSource={handleData.data}\n                                                                            scroll={{ x: 'auto' }}\n                                                                        />\n                                                                    </div>\n                                                                ),\n                                                                onOk() { },\n                                                            });\n                                                        }).catch(err => { }).finally(() => {\n                                                            setLoadingResult(false)\n                                                        })\n                                                    }}>{t('结果')}</span> : null\n                                                }\n                                                {\n                                                    item.step === 'end' && item.status === 'success' ? <span className=\"link\" onClick={() => {\n                                                        // handleClickDownload(item.reqId)\n                                                        setCurrentReqId(item.reqId)\n                                                        setVisibleDownload(true)\n                                                    }}>{t('下载')}</span> : null\n                                                }\n                                            </>\n                                        }\n                                    }]}\n                                    pagination={false}\n                                    dataSource={[{\n                                        content: item.content,\n                                        database: item.database || '-',\n                                        table: item.table || '-',\n                                        startime: item.startTime,\n                                        duration: item.duration || '-',\n                                        status: item.status\n                                    }]}\n                                />\n                            </Collapse.Panel>\n                        )\n                    })\n                }\n\n                {/* <Collapse.Panel className=\"site-collapse-custom-panel status-error\" header=\"子任务2\" key=\"2\" >\n                    <Steps size=\"small\" current={1}>\n                        <Steps.Step title=\"准备开始\" />\n                        <Steps.Step title=\"解析中\" icon={<LoadingOutlined />} />\n                        <Steps.Step title=\"执行中\" />\n                        <Steps.Step title=\"输出结果\" />\n                    </Steps>\n                    <TableBox\n                        size={\"small\"}\n                        loading={false}\n                        cancelExportData={true}\n                        rowKey={(record: any) => {\n                            return JSON.stringify(record)\n                        }}\n                        columns={[{\n                            title: '子任务',\n                            dataIndex: 'task',\n                            key: 'task',\n                        }, {\n                            title: '开始时间',\n                            dataIndex: 'startime',\n                            key: 'startime',\n                        }, {\n                            title: '运行时长',\n                            dataIndex: 'time',\n                            key: 'time',\n                        }, {\n                            title: '状态',\n                            dataIndex: 'status',\n                            key: 'status',\n                        }, {\n                            title: '操作',\n                            dataIndex: 'action',\n                            key: 'action',\n                            render: () => {\n                                return <>\n                                    <span className=\"link mr16\">详情</span>\n                                    <span className=\"link mr16\">日志</span>\n                                    <span className=\"link\">结果</span>\n                                </>\n                            }\n                        }]}\n                        pagination={false}\n                        dataSource={[{\n                            task: 'test',\n                            startime: '2022-08-09 17:45:46',\n                            time: '3分钟43秒',\n                            status: 'error'\n                        }]}\n                    />\n                </Collapse.Panel>\n                <Collapse.Panel className=\"site-collapse-custom-panel status-running\" header=\"子任务3\" key=\"3\">\n                    <p>{345}</p>\n                </Collapse.Panel> */}\n            </Collapse>\n        </div>\n    )\n}\n","import { Form } from 'antd'\nimport Select, { LabeledValue } from 'antd/lib/select';\nimport React, { useEffect, useImperativeHandle, useState } from 'react'\nimport { useTranslation } from 'react-i18next';\nimport { IIdexFormConfigItem } from '../../api/dataSearchApi'\nimport InputSearch from '../../components/InputSearch/InputSearch';\nimport './ConfigFormData.less';\n\nexport type TDataValue = Record<any, any>\n\nexport interface IConfigFormDataOptionItem extends IIdexFormConfigItem { }\n\nexport interface IProps {\n    dataValue?: TDataValue\n    option: IConfigFormDataOptionItem[]\n    onChange: (dataValue: TDataValue) => void\n    onConfigChange?: (config: IConfigFormDataOptionItem[]) => void\n}\n\nconst ConfigFormData = React.forwardRef((props: IProps, ref) => {\n    const { t, i18n } = useTranslation();\n    const [form] = Form.useForm();\n    const [, updateState] = useState<any>();\n\n    useImperativeHandle(ref, () => ({\n        onSubmit: () => {\n            return new Promise((resolve, reject) => {\n                form.validateFields().then(res => {\n                    resolve(res)\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        },\n        setData: (data: Record<any, any>) => {\n            form.setFieldsValue(data)\n        }\n    }));\n\n    useEffect(() => {\n        if (props.dataValue) {\n            form.setFieldsValue(props.dataValue)\n        }\n    }, [props.option])\n\n    const renderInput = (config: IConfigFormDataOptionItem, itemProps: Record<string, any>) => {\n        return <div></div>\n    }\n\n    const renderSelect = (config: IConfigFormDataOptionItem, itemProps: Record<string, any>) => {\n        const options: LabeledValue[] = config.value || []\n        return <Form.Item\n            key={`configFormData_${config.id}`}\n            label={config.label}\n            name={config.id}\n            rules={[\n                {\n                    required: true,\n                    message: `${t('请选择')}${config.label}`,\n                },\n            ]}\n            initialValue={config.defaultValue}\n            style={{ marginBottom: 0, marginRight: 16 }}\n            {...itemProps}\n        >\n            <Select\n                style={{ width: 200 }}\n                mode={config.multiple ? 'multiple' : undefined}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={config.placeHolder || `${t('请选择')} ${config.label}`}\n                options={options}\n                onChange={(value, rowOption: any) => {\n                    if (rowOption.relate) {\n                        const relateId = rowOption.relate.relateId\n                        const relateOption = rowOption.relate.value\n                        const currentOption = props.option\n                        for (let i = 0; i < currentOption.length; i++) {\n                            const item = currentOption[i];\n                            if (item.id === relateId) {\n                                item.value = relateOption\n                            }\n                        }\n                        props.onConfigChange && props.onConfigChange(currentOption)\n                    }\n                    props.onChange && props.onChange(form.getFieldsValue())\n                }} />\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IConfigFormDataOptionItem, itemProps: Record<string, any>) => {\n        const options: LabeledValue[] = config.value || []\n        const inputSelectOption = options.map(item => (item.value)) as string[]\n        return <Form.Item\n            key={`configFormData_${config.id}`}\n            label={config.label}\n            name={config.id}\n            rules={[\n                {\n                    required: true,\n                    message: `${t('请选择')}${config.label}`,\n                },\n            ]}\n            initialValue={config.defaultValue}\n            style={{ marginBottom: 0 }}\n            {...itemProps}\n        >\n            <InputSearch\n                isOpenSearchMatch\n                onChange={() => {\n                    props.onChange && props.onChange(form.getFieldsValue())\n                }}\n                options={inputSelectOption} width={'500px'} />\n        </Form.Item>\n    }\n\n\n    const dispatchRenderFormItem = (item: IConfigFormDataOptionItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    return (\n        <div className=\"configformdata-container d-f ac\">\n            <Form form={form} component={false}>\n                {\n                    console.log('props.option', props.option)\n                }\n                {\n                    props.option.map((component) => {\n                        return dispatchRenderFormItem(component)\n                    })\n                }\n            </Form>\n        </div>\n    )\n})\n\nexport default ConfigFormData\n","import Icon, { ExclamationCircleOutlined, MenuOutlined, ReloadOutlined, RightCircleOutlined, SaveOutlined, SlidersOutlined, StarOutlined, StopOutlined } from '@ant-design/icons';\nimport { Button, Drawer, message, Modal, Select, Switch, Tabs, Tooltip } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { actionGetDataSearchRes, actionRun, getIdexFormConfig } from '../../api/dataSearchApi';\nimport CodeEdit from '../../components/CodeEdit'\nimport InputSearch from '../../components/InputSearch/InputSearch';\nimport Draggable from 'react-draggable';\nimport './DataSearch.less';\nimport TaskList from './TaskList';\nimport { IEditorTaskItem, IEditorStore, IEditorItem, IEditorItemParams } from './interface';\nimport moment from 'moment'\nimport { data2Time } from '../../util';\n// import LineChartTemplate from '../../components/LineChartTemplate/LineChartTemplate';\nimport LoadingStar from '../../components/LoadingStar/LoadingStar';\nimport cookies from 'js-cookie';\nimport ConfigFormData, { IConfigFormDataOptionItem } from './ConfigFormData';\nimport { useTranslation } from 'react-i18next';\nconst userName = cookies.get('myapp_username')\n\nconst createId = () => {\n    return Math.random().toString(36).substring(2)\n}\n\nconst sqlMap: Record<string, string> = {\n    'test': `CREATE TABLE dbo.EmployeePhoto\n    (\n        EmployeeId INT NOT NULL PRIMARY KEY,\n        Photo VARBINARY(MAX) FILESTREAM NULL,\n        MyRowGuidColumn UNIQUEIDENTIFIER NOT NULL ROWGUIDCOL\n                        UNIQUE DEFAULT NEWID()\n    );\n    \n    GO\n    \n    /*\n    text_of_comment\n    /* nested comment */\n    */\n    \n    -- line comment\n    \n    CREATE NONCLUSTERED INDEX IX_WorkOrder_ProductID\n        ON Production.WorkOrder(ProductID)\n        WITH (FILLFACTOR = 80,\n            PAD_INDEX = ON,\n            DROP_EXISTING = ON);\n    GO\n    \n    WHILE (SELECT AVG(ListPrice) FROM Production.Product) < $300\n    BEGIN\n       UPDATE Production.Product\n          SET ListPrice = ListPrice * 2\n       SELECT MAX(ListPrice) FROM Production.Product\n       IF (SELECT MAX(ListPrice) FROM Production.Product) > $500\n          BREAK\n       ELSE\n          CONTINUE\n    END\n    PRINT 'Too much for the market to bear';\n    \n    MERGE INTO Sales.SalesReason AS [Target]\n    USING (VALUES ('Recommendation','Other'), ('Review', 'Marketing'), ('Internet', 'Promotion'))\n           AS [Source] ([NewName], NewReasonType)\n    ON [Target].[Name] = [Source].[NewName]\n    WHEN MATCHED\n    THEN UPDATE SET ReasonType = [Source].NewReasonType\n    WHEN NOT MATCHED BY TARGET\n    THEN INSERT ([Name], ReasonType) VALUES ([NewName], NewReasonType)\n    OUTPUT $action INTO @SummaryOfChanges;\n    \n    SELECT ProductID, OrderQty, SUM(LineTotal) AS Total\n    FROM Sales.SalesOrderDetail\n    WHERE UnitPrice < $5.00\n    GROUP BY ProductID, OrderQty\n    ORDER BY ProductID, OrderQty\n    OPTION (HASH GROUP, FAST 10);    \n`,\n}\n\nexport default function DataSearch() {\n    const { t, i18n } = useTranslation();\n    const initId = createId()\n    const initCurrentEditorData: IEditorItem = {\n        tabId: initId,\n        title: `${t('新查询')} 1`,\n        status: 'init',\n        smartShow: false,\n        smartContent: '',\n        smartCache: '',\n        smartTimer: undefined,\n        loading: false,\n        taskMap: {}\n    }\n    const initEditorData: Record<string, IEditorItem> = JSON.parse(localStorage.getItem('dataSearch2') || JSON.stringify({\n        [initCurrentEditorData.tabId]: initCurrentEditorData\n    }))\n    const initEditorDataList = Object.entries(initEditorData).reduce((pre: IEditorItem[], [key, value]) => ([...pre, { ...value }]), [])\n\n    const [activeKey, _setActiveKey] = useState<string>(initEditorDataList[0].tabId)\n    const activeKeyRef = useRef(activeKey);\n    const setActiveKey = (data: string): void => {\n        activeKeyRef.current = data;\n        _setActiveKey(data);\n    };\n\n    const [editorStore, _seteditorStore] = useState<IEditorStore>(initEditorData)\n    const editorStoreRef = useRef(editorStore);\n    const seteditorStore = (data: IEditorStore): void => {\n        editorStoreRef.current = data;\n        _seteditorStore(data);\n    };\n\n    const [configOption, _setConfigOption] = useState<IConfigFormDataOptionItem[]>([])\n    const configOptionRef = useRef(configOption);\n    const setConfigOption = (data: IConfigFormDataOptionItem[]): void => {\n        configOptionRef.current = data;\n        _setConfigOption(data);\n    };\n\n    const initialPanes = Object.entries(editorStore).reduce((pre: IEditorItem[], [key, value]) => ([...pre, { ...value }]), [])\n    const [panes, setPanes] = useState(initialPanes);\n    const newTabIndex = useRef(initEditorDataList.length);\n\n    const [columnConfig, setColumnConfig] = useState<any[]>([])\n    const [dataList, setDataList] = useState<any[]>([])\n\n    const configDataComponentRefs: any = useRef(null);\n\n    const setEditorState = (currentState: IEditorItemParams, key?: string) => {\n\n        const targetRes: IEditorStore = {\n            ...editorStoreRef.current\n        }\n        let currentTaskMap = {}\n\n        if (currentState.taskMap) {\n            currentTaskMap = {\n                taskMap: {\n                    ...editorStoreRef.current[activeKey].taskMap,\n                    ...currentState.taskMap\n                }\n            }\n        }\n\n        targetRes[key || activeKey] = {\n            ...targetRes[key || activeKey],\n            ...currentState,\n            ...currentTaskMap\n        }\n\n        localStorage.setItem('dataSearch2', JSON.stringify(targetRes))\n        editorStoreRef.current = targetRes\n        seteditorStore(targetRes)\n    }\n\n    useEffect(() => {\n        getIdexFormConfig().then(res => {\n            const option = res.data.result\n            setConfigOption(option)\n        })\n    }, [])\n\n    useEffect(() => {\n        const targetDom = document.getElementById(\"buttonDrag\")\n        if (targetDom) {\n            drag(targetDom);\n        }\n\n        function drag(obj: any) {\n            obj.onmousedown = function (e: any) {\n                var dir = \"\";  //设置好方向\n                var firstX = e.clientX;  //获取第一次点击的横坐标\n                var firstY = e.clientY;   //获取第一次点击的纵坐标\n                var width = obj.offsetWidth;  //获取到元素的宽度\n                var height = obj.offsetHeight;  //获取到元素的高度\n                var Left = obj.offsetLeft;   //获取到距离左边的距离\n                var Top = obj.offsetTop;   //获取到距离上边的距离\n                //下一步判断方向距离左边的距离+元素的宽度减去自己设定的宽度，只要点击的时候大于在这个区间，他就算右边\n                if (firstX > Left + width - 30) {\n                    dir = \"right\";\n                } else if (firstX < Left + 30) {\n                    dir = \"left\";\n                }\n                if (firstY > Top + height - 30) {\n                    dir = \"down\";\n                } else if (firstY < Top + 30) {\n                    dir = \"top\";\n                }\n                //判断方向结束\n                document.onmousemove = function (e) {\n                    switch (dir) {\n                        case \"right\":\n                            obj.style[\"width\"] = width + (e.clientX - firstX) + \"px\";\n                            break;\n                        case \"left\":\n                            obj.style[\"width\"] = width - (e.clientX - firstX) + \"px\";\n                            obj.style[\"left\"] = Left + (e.clientX - firstX) + \"px\";\n                            break;\n                        case \"top\":\n                            obj.style[\"height\"] = height - (e.clientY - firstY) + \"px\";\n                            obj.style[\"top\"] = Top + (e.clientY - firstY) + \"px\";\n                            break;\n                        case \"down\":\n                            obj.style[\"height\"] = height + (e.clientY - firstY) + \"px\";\n                            break;\n                    }\n                }\n                obj.onmouseup = function () {\n                    document.onmousemove = null;\n                }\n                return false;\n            }\n        }\n    }, [])\n\n    const clearEditorTaskTimerByKey = (activeKey: string) => {\n        const tagList = Object.entries(editorStoreRef.current[activeKey]).reduce((pre: IEditorItem[], [key, value]) => ([...pre, { ...value }]), [])\n        tagList.forEach(tag => {\n            clearInterval(tag.smartTimer)\n        })\n        const currentTaskList = Object.entries(editorStoreRef.current[activeKey].taskMap).reduce((pre: IEditorTaskItem[], [key, value]) => ([...pre, { ...value }]), [])\n        currentTaskList.forEach(task => {\n            clearInterval(task.timer)\n        })\n    }\n\n    const clearTaskTimer = (activeKey: string, taskId: string) => {\n        const taskMap = editorStoreRef.current[activeKey].taskMap\n        const task = taskMap[taskId]\n        if (task) {\n            clearInterval(task.timer)\n        }\n    }\n\n    // 清空定时器\n    useEffect(() => {\n        setEditorState({\n            loading: false\n        })\n\n        return () => {\n            Object.entries(editorStore).forEach((item) => {\n                const [key] = item\n                clearEditorTaskTimerByKey(key)\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        // 当前tab状态是runing，触发轮询\n        const currentEditorStore = editorStore[activeKey]\n        const currentTaskList = Object.entries(currentEditorStore.taskMap).reduce((pre: IEditorTaskItem[], [key, value]) => ([...pre, { ...value }]), [])\n        currentTaskList.forEach(task => {\n            if (task.status === 'running') {\n                pollGetRes(task.reqId)\n            }\n        })\n    }, [activeKey])\n\n\n    const onChange = (newActiveKey: string) => {\n        Object.entries(editorStore).forEach((item) => {\n            const [key] = item\n            if (key !== newActiveKey) {\n                clearEditorTaskTimerByKey(key)\n            }\n        })\n        setColumnConfig([])\n        setDataList([])\n        setActiveKey(newActiveKey);\n    };\n\n    const add = () => {\n        clearEditorTaskTimerByKey(activeKey)\n\n        const currentIndex = ++newTabIndex.current\n        if (currentIndex > 10) {\n            message.warn(t('标签数目达到限制'))\n        } else {\n            const newActiveKey = createId();\n            const title = `${t('新查询')} ${currentIndex}`\n            const newPanes = [...panes];\n            const initState: IEditorItem = {\n                title,\n                tabId: newActiveKey,\n                status: 'init',\n                smartShow: false,\n                smartContent: '',\n                smartTimer: undefined,\n                smartCache: '',\n                loading: false,\n                taskMap: {}\n            }\n            newPanes.push(initState);\n            setPanes(newPanes);\n            setActiveKey(newActiveKey);\n\n            let res: IEditorStore = {\n                ...editorStore, [newActiveKey]: initState\n            }\n\n            seteditorStore(res)\n            localStorage.setItem('dataSearch2', JSON.stringify(res))\n        }\n    };\n\n    const remove = (targetKey: string) => {\n        let newActiveKey = activeKey;\n        let lastIndex = -1;\n        panes.forEach((pane, i) => {\n            if (pane.tabId === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const newPanes = panes.filter(pane => pane.tabId !== targetKey);\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].tabId;\n            } else {\n                newActiveKey = newPanes[0].tabId;\n            }\n        }\n        setPanes(newPanes);\n        setActiveKey(newActiveKey);\n\n        let res = { ...editorStore }\n        delete res[targetKey]\n        seteditorStore(res)\n        localStorage.setItem('dataSearch2', JSON.stringify(res))\n    };\n\n    const onEdit = (targetKey: any, action: 'add' | 'remove') => {\n        if (action === 'add') {\n            add();\n        } else {\n            remove(targetKey);\n        }\n    };\n\n    const fetchData = (task_id: string) => {\n        actionGetDataSearchRes(task_id).then(res => {\n            const { state, result, err_msg, result_url, spark_log_url, stage } = res.data\n            const task: IEditorTaskItem = {\n                ...editorStoreRef.current[activeKey].taskMap[task_id],\n                status: state,\n                step: stage,\n                log: spark_log_url,\n                downloadUrl: result_url,\n                result,\n                message: err_msg\n            }\n            if (state === 'success' || state === 'failure') {\n                const starTime = new Date(task.startTime || '').valueOf()\n                const nowTime = new Date().valueOf()\n                const duration = data2Time((nowTime - starTime) / 1000)\n                task.duration = duration\n\n                setEditorState({\n                    status: 'success',\n                    taskMap: {\n                        [task_id]: task\n                    }\n                })\n                clearTaskTimer(activeKey, task_id)\n            } else {\n                setEditorState({\n                    status: 'success',\n                    taskMap: {\n                        [task_id]: task\n                    }\n                })\n            }\n        }).catch(() => {\n            clearTaskTimer(activeKey, task_id)\n            message.error(t('查询结果失败，尝试重新运行'))\n            setEditorState({\n                status: 'failure',\n                taskMap: {\n                    [task_id]: {\n                        ...editorStoreRef.current[activeKey].taskMap[task_id],\n                        status: 'failure',\n                        step: 'end',\n                    }\n                }\n            })\n        })\n    }\n\n    const pollGetRes = (task_id: string) => {\n        clearTaskTimer(activeKey, task_id)\n\n        let timer = setInterval(() => {\n            fetchData(task_id)\n        }, 5000)\n\n        setEditorState({\n            taskMap: {\n                [task_id]: {\n                    reqId: task_id,\n                    status: 'init',\n                    content: editorStore[activeKey].content,\n                    name: `${t('任务')}${task_id}`,\n                    step: 'start',\n                    startTime: moment().format('YYYY-MM-DD HH:mm:ss'),\n                    database: editorStore[activeKey].database,\n                    table: editorStore[activeKey].table,\n                    timer,\n                    message: ''\n                }\n            }\n        })\n        fetchData(task_id)\n    }\n\n    const runTask = () => {\n        setEditorState({ status: 'running' })\n        const customParams = configOption.map(item => item.id).reduce((pre: any, next: any) => ({ ...pre, [next]: editorStore[activeKey][next] }), {})\n        // 运行子任务\n        actionRun({\n            sql: editorStore[activeKey]?.content || '',\n            ...customParams\n        }).then(res => {\n            const { err_msg, task_id } = res.data\n            if (err_msg) {\n                setEditorState({\n                    status: 'failure',\n                })\n                Modal.error({\n                    title: t('运行失败'),\n                    icon: <ExclamationCircleOutlined />,\n                    width: 1000,\n                    content: err_msg,\n                    okText: t('关闭'),\n                    // maskClosable: true\n                });\n            } else if (task_id) {\n                pollGetRes(task_id)\n            }\n        }).catch(err => {\n            setEditorState({ status: 'failure' })\n        })\n    }\n\n    return (\n        <div className=\"datasearch-container fade-in d-f\">\n            <div className=\"flex1 ptb16 pl16\">\n                <Tabs type=\"editable-card\" onChange={onChange} activeKey={activeKey} onEdit={onEdit}>\n                    {panes.map((pane, index) => (\n                        <Tabs.TabPane tab={`${t('新查询')} ${index + 1}`} key={pane.tabId} closable={index !== 0}>\n                            <div className=\"d-f fd-c h100\">\n                                <div className=\"flex2 s0 ov-a\">\n                                    {\n                                        editorStore[activeKey]?.loading ? <div className=\"codeedit-mark\">\n                                            <div className=\"d-f jc ac fd-c\">\n                                                <LoadingStar />\n                                                <div>\n                                                    {t('结果生成中')}\n                                                </div>\n                                            </div>\n                                        </div> : null\n                                    }\n\n                                    <CodeEdit\n                                        value={editorStore[activeKey]?.content}\n                                        onChange={(value: any) => {\n                                            setEditorState({\n                                                content: value === '' ? undefined : value,\n                                                title: pane.title,\n                                            })\n                                        }} />\n                                </div>\n\n                                <div className=\"ov-h\" id=\"showBox\" style={{ height: 500 }}>\n                                    <Draggable\n                                        axis=\"y\"\n                                        onStart={() => { }}\n                                        onDrag={(e: any) => {\n                                            const showBoxDom = document.getElementById('showBox')\n                                            if (showBoxDom) {\n                                                const res = document.body.clientHeight - e.y\n                                                showBoxDom.style.height = `${res}px`\n                                            }\n                                        }}\n                                        onStop={() => { }}>\n                                        <div className=\"ta-c\" style={{ cursor: 'ns-resize' }}><MenuOutlined /></div>\n                                    </Draggable>\n                                    <div className=\"ptb8 plr16 bor-l bor-r b-side d-f ac jc-b bg-w\">\n                                        <div className=\"d-f ac\">\n                                            <Switch className=\"mr8\"\n                                                checked={editorStore[activeKey].smartShow}\n                                                unCheckedChildren={t('正常模式')}\n                                                checkedChildren={t('智能模式')} onChange={(checked) => {\n                                                    setEditorState({ smartShow: checked })\n                                                }} />\n                                            {\n                                                editorStore[activeKey].smartShow ? <InputSearch\n                                                    value={editorStore[activeKey].smartContent}\n                                                    isOpenSearchMatch\n                                                    onChange={(value: any) => {\n                                                        setEditorState({\n                                                            smartContent: value,\n                                                        })\n                                                    }}\n                                                    onSearch={(value) => {\n                                                        setEditorState({\n                                                            smartCache: sqlMap[value],\n                                                            loading: true,\n                                                        })\n\n                                                        const timer = setInterval(() => {\n                                                            const currentContent = editorStoreRef.current[activeKey].content || ''\n                                                            if (editorStoreRef.current[activeKey].smartCache) {\n                                                                let smartCache = editorStoreRef.current[activeKey].smartCache || ''\n                                                                const tarStr = smartCache.substr(0, 20)\n                                                                smartCache = smartCache.replace(tarStr, '')\n\n                                                                setEditorState({\n                                                                    smartCache,\n                                                                    content: currentContent + tarStr\n                                                                })\n                                                            } else {\n                                                                clearInterval(editorStoreRef.current[activeKey].smartTimer)\n                                                                setEditorState({\n                                                                    smartCache: '',\n                                                                    smartTimer: undefined,\n                                                                    loading: false,\n                                                                })\n                                                            }\n                                                        }, 800)\n\n                                                        setEditorState({\n                                                            smartTimer: timer,\n                                                        })\n                                                    }}\n                                                    options={[\n                                                        'test',\n                                                    ]} placeholder={t('AI智能生成')} width={'240px'} /> : null\n                                            }\n                                        </div>\n                                        <div className=\"d-f ac\">\n                                            <ConfigFormData\n                                                ref={configDataComponentRefs}\n                                                dataValue={editorStore[activeKey]}\n                                                onChange={(dataValue) => {\n                                                    setEditorState(dataValue)\n                                                }}\n                                                onConfigChange={(option) => {\n                                                    setConfigOption(option)\n                                                    setEditorState({\n                                                        database: 'db'\n                                                    })\n                                                }}\n                                                option={configOptionRef.current} />\n                                            <Button className=\"ml16\" type=\"primary\" loading={editorStore[activeKey].status === 'running'} onClick={() => {\n                                                configDataComponentRefs.current.onSubmit().then((res: any) => {\n                                                    runTask()\n                                                })\n                                            }}>{t('运行')}<RightCircleOutlined /></Button>\n                                        </div>\n                                    </div>\n                                    <div className=\"flex1 bor b-side s0 bg-w p-r ov-a\" style={{ height: 'calc(100% - 80px)' }}>\n                                        <div className=\"pt8\">\n                                            <div className=\"tag-result bg-theme c-text-w mr16\">\n                                                {t('结果')}\n                                            </div>\n                                        </div>\n                                        <div className=\"plr16 pt8\">\n                                            <TaskList\n                                                option={editorStore[activeKey].taskMap}\n                                                onDelete={(id) => {\n                                                    Modal.confirm({\n                                                        title: t('删除'),\n                                                        icon: <ExclamationCircleOutlined />,\n                                                        content: `${t('确定删除')}?`,\n                                                        okText: t('确认删除'),\n                                                        cancelText: t('取消'),\n                                                        okButtonProps: { danger: true },\n                                                        onOk() {\n                                                            let taskMap = editorStore[activeKey].taskMap\n                                                            clearTaskTimer(activeKey, id)\n                                                            delete taskMap[id]\n                                                            setEditorState({\n                                                                taskMap\n                                                            })\n                                                        },\n                                                        onCancel() { },\n                                                    });\n                                                }}\n                                                onRetry={(id) => {\n                                                    pollGetRes(id)\n                                                }}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Tabs.TabPane>\n                    ))}\n                </Tabs>\n            </div>\n        </div>\n    )\n}\n"],"names":["InputSearch","props","inputRef","id","Math","random","toString","substring","_useState","useState","options","_useState2","_slicedToArray","dataCache","setDataCache","_useState3","value","_useState4","setValue","useEffect","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","_jsx","children","preStr","nextStr","length","_jsxs","className","debounceScroll","fun","timer","time","arguments","undefined","_len","args","Array","_key","clearTimeout","setTimeout","apply","concat","debounce","onScrollButtom","labelName","htmlFor","style","width","Input","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","loading","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","ResizableTitle","_ref","onResize","restProps","_objectWithoutProperties","_excluded","Resizable","height","handle","draggableOpts","enableUserSelectHack","_objectSpread","userSelect","exportDataVisible","setExportDataVisible","header","data","dataFormat","setDataFormat","_useState5","_useState6","filterValue","setFilterValue","_useState7","columns","_useState8","cols","setCols","handleResize","_","_ref2","size","temp","_toConsumableArray","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","_useState9","scroll","_useState10","_useTranslation","useTranslation","t","i18n","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","Space","direction","Modal","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","Checkbox","label","defaultValue","bottom","Button","type","Tabs","tab","text","onCopy","message","cursor","minHeight","titleNode","buttonNode","cancelExportData","Row","justify","align","Col","marginLeft","ConfigProvider","renderEmpty","flexDirection","src","emptyImg","alt","Table","components","cell","pagination","rowSelection","actionRun","params","axios","actionGetDataSearchRes","task_id","getIdexTaskDownloadUrl","separator","getIdexTaskResult","stopIndxTask","getIdexFormConfig","CodeEdit","_Fragment","CodeMirror","theme","bbedit","extensions","sql","zebraStripes","step","lightColor","darkColor","stepMap","statusIconMap","status","LoadingOutlined","CloseCircleOutlined","color","QuestionCircleOutlined","TaskList","visibleDownload","setVisibleDownload","setVisibleResult","setLoadingResult","_setSeparator","separatorRef","useRef","setSeparator","current","currentReqId","_setCurrentReqId","currentReqIdRef","handleResultData","result","targetData","slice","_defineProperty","config","key","destroyOnClose","Select","then","window","open","download_url","catch","err","console","log","Collapse","defaultActiveKey","entries","option","reverse","reqId","extra","onDelete","DeleteOutlined","onRetry","RedoOutlined","Steps","icon","TableBox","record","render","Tooltip","placement","okText","content","span","startTime","duration","onOk","StopOutlined","cancelText","Promise","resolve","reject","handleData","finally","database","table","startime","ConfigFormData","React","_Form$useForm","Form","form","useImperativeHandle","onSubmit","validateFields","setData","setFieldsValue","dataValue","dispatchRenderFormItem","itemProps","name","rules","required","initialValue","marginBottom","marginRight","mode","multiple","showSearch","disable","optionFilterProp","placeHolder","rowOption","relate","relateId","relateOption","currentOption","i","onConfigChange","getFieldsValue","renderSelect","inputSelectOption","renderInputSelect","component","createId","cookies","sqlMap","DataSearch","initCurrentEditorData","tabId","smartShow","smartContent","smartCache","smartTimer","taskMap","initEditorData","parse","getItem","initEditorDataList","activeKey","_setActiveKey","activeKeyRef","setActiveKey","editorStore","_seteditorStore","editorStoreRef","seteditorStore","configOption","_setConfigOption","configOptionRef","setConfigOption","initialPanes","_ref3","_ref4","panes","setPanes","newTabIndex","setColumnConfig","_useState11","_useState12","setDataList","configDataComponentRefs","setEditorState","currentState","targetRes","currentTaskMap","obj","targetDom","document","getElementById","onmousedown","dir","firstX","clientX","firstY","clientY","offsetWidth","offsetHeight","Left","offsetLeft","Top","offsetTop","onmousemove","onmouseup","clearEditorTaskTimerByKey","_ref5","_ref6","tag","clearInterval","_ref7","_ref8","task","clearTaskTimer","taskId","currentEditorStore","_ref9","_ref10","pollGetRes","fetchData","_res$data","state","err_msg","result_url","spark_log_url","stage","downloadUrl","starTime","Date","valueOf","nowTime","data2Time","setInterval","moment","format","newActiveKey","onEdit","targetKey","action","currentIndex","newPanes","initState","add","lastIndex","pane","remove","_editorStore$activeKe2","_editorStore$activeKe3","closable","LoadingStar","Draggable","axis","onStart","onDrag","showBoxDom","body","y","onStop","MenuOutlined","Switch","checked","unCheckedChildren","checkedChildren","currentContent","tarStr","substr","replace","_editorStore$activeKe","customParams","_res$data2","ExclamationCircleOutlined","runTask","RightCircleOutlined","okButtonProps","danger"],"sourceRoot":""}